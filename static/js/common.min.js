

window.onload = function () {
	
	// functions
	function scrollToEl(e) {
	  $('html, body').animate({
	    scrollTop: e.offset().top - $('#header').outerHeight() - 150
	  }, 500);
	}

	/*_all_js_*/
	let admin_data
	
	// backend simulation with jason ( get email and password )
	function getFile(fileName) {
		let request = new XMLHttpRequest()
				request.open('GET', fileName)
				request.onloadend = function () {
					if (request.readyState === 4 && request.status === 200) {
						admin_data = JSON.parse(request.responseText)
					}
				}
		request.send()
	}
	getFile('./admin-data.json')
	
	
	$('#login_form').on('submit', function (e) {
		e.preventDefault()
		const adminEmail = admin_data.email,
					adminPass = admin_data.pass;
	
		let valid, inputId;
		
		$(this).find('input').not('[type=submit]').each(function () {
	
			inputId = $(this).attr('id')
	
				// Password
				if (inputId === 'pass') { 
					if ($(this).val() !== '' && $(this).val() === adminPass) {
						$(this).removeClass('error')
					} else {
						$(this).addClass('error')
					}
			}
				// Email
				if (inputId === 'email') {
					if ($(this).val() == '') {
						$(this).addClass('error')
						$('#' + inputId + ' ~ .error-mess')[0].textContent = 'Вкажіть email'
					}else if (!$(this).val().includes('@')) {
						$(this).addClass('error')
						$('#' + inputId + ' ~ .error-mess')[0].textContent = 'Пропущено "@"'
					}else if (/[а-яА-ЯЪъЫыЭэЁё]/i.test($(this).val())) {
						$(this).addClass('error')
						$('#' + inputId + ' ~ .error-mess')[0].textContent = 'Не можна писати кирилицею'
					}else if ($(this).val().length > 320) {
						$(this).addClass('error')
						$('#' + inputId + ' ~ .error-mess')[0].textContent = 'Не можна бiльше 320 символiв'
					}else if (!emailReg.test($(this).val()) || $(this).val() == '') {
						$(this).addClass('error')
						$('#' + inputId + ' ~ .error-mess')[0].textContent = 'Перевірте E-mail'
					}else if($(this).val() !== adminEmail) {
						$(this).addClass('error')
						$('#' + inputId + ' ~ .error-mess')[0].textContent = 'Перевірте E-mail'
					}else {
						$(this).removeClass('error')
					}
	
					// if ($(this).val() !== '' && $(this).val() === adminEmail) {
					// 	$(this).removeClass('error')
					// } else {
					// 	$(this).addClass('error')
					// }
				}
			})
	
		
		// check error
	  if ($('#login_form .error').length) {
	    return false; 
	  }
	
		let formData = new FormData(e.target);
		let jsonData = {};
		
		formData.forEach(function (value, key) { jsonData[key] = value; });
		jsonData = JSON.stringify(jsonData);
	
		$.ajax({
			url: "/",
			type: "POST",
			data: jsonData,
			success: function (jsonData) {
				// code
				setTimeout(() => {
					location.href = 'user-cabinet-data.html'
					localStorage.login = true
				}, 1000);
			},
			error: function (error) {
				// code
			}
		});
		
	})
	$('#signup_form').on('submit', function (e) {
	  e.preventDefault()
	
	  let inputId;
	
	  $(this).find('input').not('[type=submit]').each(function () {
	
	    inputId = $(this).attr('id')
	
	    let emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
	
	    // Name
	    if (inputId === 'name') {
	      if ($(this).val() !== '' && $(this).val().length > 1) {
	        $(this).removeClass('error')
	      } else {
	        $(this).addClass('error')
	      }
	    }
	
	    // Surname
	    if (inputId === 'surname') {
	      if ($(this).val() !== '' && $(this).val().length > 1) {
	        $(this).removeClass('error')
	      } else {
	        $(this).addClass('error')
	      }
	    }
	    
	    // Password
	    if (inputId === 'pass') {
	      if ($(this).val() === '') {
	        $(this).addClass('error')
	        $('#' + inputId + ' ~ .error-mess')[0].textContent = 'Перевірте пароль'
	      } else if ($(this).val().length <= 3) {
	        $(this).addClass('error')
	        $('#' + inputId + ' ~ .error-mess')[0].textContent = 'Вкажіть бiльше 3 символiв'
	      } else {
	        $(this).removeClass('error')
	      }
	    }
	
	    // Email
	    if (inputId === 'email') {
	      if ($(this).val() == '') {
	        $(this).addClass('error')
	        $('#' + inputId + ' ~ .error-mess')[0].textContent = 'Вкажіть email'
	      }else if (!$(this).val().includes('@')) {
	        $(this).addClass('error')
	        $('#' + inputId + ' ~ .error-mess')[0].textContent = 'Пропущено "@"'
	      }else if (/[а-яА-ЯЪъЫыЭэЁё]/i.test($(this).val())) {
	        $(this).addClass('error')
	        $('#' + inputId + ' ~ .error-mess')[0].textContent = 'Не можна писати кирилицею'
	      }else if ($(this).val().length > 320) {
	        $(this).addClass('error')
	        $('#' + inputId + ' ~ .error-mess')[0].textContent = 'Не можна бiльше 320 символiв'
	      }else if (!emailReg.test($(this).val()) || $(this).val() == '') {
	        $(this).addClass('error')
	        $('#' + inputId + ' ~ .error-mess')[0].textContent = 'Перевірте E-mail'
	      } else {
	        $(this).removeClass('error')
	      }
	      
	      // if (!emailReg.test($(this).val()) || $(this).val() == '') {
	      //   $(this).addClass('error')
	      // } else {
	      //   $(this).removeClass('error')
	      // }
	
	    }
	  })
	
	  // check error
	  if ($('#signup_form .error').length) {
	    $('html, body').animate({ scrollTop: $('#signup_form .error').offset().top - $('#header').outerHeight() - 20 }, 300)
	      return false; 
	  }
	
	  let formData = new FormData(e.target);
	  let jsonData = {};
	  
	  formData.forEach(function (value, key) { jsonData[key] = value; });
	  jsonData = JSON.stringify(jsonData);
	
	  $.ajax({
	    url: "/",
	    type: "POST",
	    data: jsonData,
	    success: function (jsonData) {
	      // code
	      localStorage.login = true
	      setTimeout(() => {
	        location.href = 'mail_confirmation.html'
	      }, 1000);
	    },
	    error: function (error) {
	      // code
	    }
	  });
	  
	
	})
	$('#forgot_password_form').on('submit', function (e) {
	  e.preventDefault()
	  const adminEmail = admin_data.email;
	  let inputId;
	
	  $(this).find('input').not('[type=submit]').each(function () {
	
	    inputId = $(this).attr('id')
	
	    let emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
	
	    // Email
	    if (inputId === 'email') {
	      if ($(this).val() == '') {
	        $(this).addClass('error')
	        $('#' + inputId + ' ~ .error-mess')[0].textContent = 'Вкажіть email'
	      }else if (!$(this).val().includes('@')) {
	        $(this).addClass('error')
	        $('#' + inputId + ' ~ .error-mess')[0].textContent = 'Пропущено "@"'
	      }else if (/[а-яА-ЯЪъЫыЭэЁё]/i.test($(this).val())) {
	        $(this).addClass('error')
	        $('#' + inputId + ' ~ .error-mess')[0].textContent = 'Не можна писати кирилицею'
	      }else if ($(this).val().length > 320) {
	        $(this).addClass('error')
	        $('#' + inputId + ' ~ .error-mess')[0].textContent = 'Не можна бiльше 320 символiв'
	      }else if (!emailReg.test($(this).val()) || $(this).val() == '') {
	        $(this).addClass('error')
	        $('#' + inputId + ' ~ .error-mess')[0].textContent = 'Перевірте E-mail'
	      }else if($(this).val() !== adminEmail) {
	        $(this).addClass('error')
	        $('#' + inputId + ' ~ .error-mess')[0].textContent = 'Перевірте E-mail'
	      }else {
	        $(this).removeClass('error')
	      }
	      
	      // if (!emailReg.test($(this).val()) || $(this).val() == '') {
	      //   $(this).addClass('error')
	      // } else {
	      //   $(this).removeClass('error')
	      // }
	    }
	  })
	
	  // check error
	  if ($('#forgot_password_form .error').length) { return false; }
	  
	  let formData = new FormData(e.target);
	  let jsonData = {};
	  
	  formData.forEach(function (value, key) { jsonData[key] = value; });
	  jsonData = JSON.stringify(jsonData);
	  
	  $.ajax({
	    url: "/",
	    type: "POST",
	    data: jsonData,
	    success: function (jsonData) {
	      // code
	      localStorage.login = true
	
	      setTimeout(() => {
	        $('#forgot_password_form').slideUp()
	      }, 1000);
	
	      setTimeout(() => {
	        $('.forgot-password-message').slideDown()
	      }, 1000);
	
	    },
	    error: function (error) {
	      // code
	    }
	  });
	
	})

	// glogal call for all collapse elem. "close" (document mouseup)
	$(document).on('mouseup',function(e){
	  let elsNav = $('.navbar-toggler, .header-nav'),
	      elsSearch = $('.btn-search-toggler, .search-wrap'),
	    elsSearchSortDrop = $('.site-dropdown, [data-dropdown-for]'),
	      elsPromoVideo = $('.video-wrap, .play-video')
	  if (!elsNav.is(e.target) && elsNav.has(e.target).length === 0){
	    $('.navbar-collapse').collapse('hide')
	  }
	  if (!elsSearch.is(e.target) && elsSearch.has(e.target).length === 0){
	    $('.search-wrap').removeClass('active')
	  }
	  if (!elsSearchSortDrop.is(e.target) && elsSearchSortDrop.has(e.target).length === 0){
	    $('.site-dropdown').removeClass('active')
	  }
	  if (!elsPromoVideo.is(e.target) && elsPromoVideo.has(e.target).length === 0 && $('#video').length != 0) {
	    $('.play-video').removeClass('play')
	    $("#video").get(0).contentWindow.postMessage('{"event":"command","func":"' + 'pauseVideo' + '","args":""}', '*');
	  }
	})
	
	// home page play-video
	$('.play-video').on('click',function(e){
	  // '?enablejsapi=1&version=3&playerapiid=ytplayer'
	  let srcVid = $("#video").get(0).dataset.videoSrc + '?enablejsapi=1&controls=1'
	  if(!$("#video").get(0).src.includes('&autoplay=1')){
	    $("#video").get(0).src = srcVid + '&autoplay=1&start=0'
	    this.classList.add("play")
	  }else{
	    // srcVid = srcVid.replace('&autoplay=1', '') // $("#video").get(0).src = srcVid
	    if(!this.classList.contains('play')){
	      this.classList.add("play")
	      $("#video").get(0).contentWindow.postMessage('{"event":"command","func":"' + 'playVideo' + '","args":""}', '*');
	    }else{
	      this.classList.remove("play")
	      $("#video").get(0).contentWindow.postMessage('{"event":"command","func":"' + 'pauseVideo' + '","args":""}', '*');
	    }
	  }
	});
	
	
	// lazy load 
	var scrollTop = $(window).scrollTop() +  $(window).height()
	$('[data-src]').each(function (){
	  if(scrollTop >= $(this).offset().top){
	    this.src = this.dataset.src
	    this.removeAttribute('data-src')
	  }
	})
	$(window).on('scroll', function(){
	  var scrollTop = $(this).scrollTop() +  $(this).height()
	  $('[data-src]').each(function (){
	    if(scrollTop >= $(this).offset().top){
	      this.src = this.dataset.src
	      this.removeAttribute('data-src')
	    }
	  })
	})
	
	// cut text...
	// $('.excerpt-text').each(function () {
	$('.about-memorial').each(function () {
	  // About Memorial ( cut text... )
	  if ($(this).outerHeight() > 130) {
	    $(this)[0].classList.add('excerpt-text', 'close')
	      let btnExcerpt = document.createElement('button')
	      btnExcerpt.classList.add('btn-excerpt')
	      btnExcerpt.innerHTML +=
	        '<span>Читати повністю</span><svg class="icon-brecket" width="10" height="6" viewBox="0 0 10 6" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M10 1.2403L8.77007 0L5 3.55414L1.22993 0L0 1.2403L5 6L10 1.2403Z" fill="currentColor"></path></svg>'
	
	      $(this)[0].appendChild(btnExcerpt)
	    }
	})
	
	// About-Memorial show excerpt text ( cut text... )
	$('.about-memorial .btn-excerpt').on('click', function (e) {
	  let excerptText = $(this)[0].parentNode
	  if (excerptText.classList.contains('close')) {
	    $(this).children('span').text('Згорнути текст')
	  } else {
	    $(this).children('span').text('Читати повністю')
	  }
	  $(this)[0].classList.toggle('open')
	  $(this)[0].parentNode.classList.toggle('close')
	})
	
	// btn-copy pay data
	$('.btn-copy').on('click', function () {
	  const thisCopyText = this.parentNode.querySelector('.copy-data').innerText;
	  // copy
	  navigator.clipboard.writeText(thisCopyText);
	  // tooltipe info
	  this.dataset.title = 'Скопійовано: ' + thisCopyText
	  setTimeout(function(){
	    this.dataset.title = 'Копіювати'
	  }.bind(this), 3000);
	})
	// btn-copy share link post
	if ($('[data-news-copy]')[0]){ $('[data-news-copy]')[0].dataset.newsCopy = window.location.href}
	if ($('.share-links-modal .more-item')){
	  $('.share-links-modal .more-item').on('click', function(){
	    this.classList.toggle('more-item')
	  })
	}
	
	$('[data-news-copy]').on('click', function () {
	  // copy
	  navigator.clipboard.writeText(this.dataset.newsCopy);
	  this.dataset.title = 'Скопійовано посилання на цю сторінку'
	  setTimeout(function(){
	    this.dataset.title = 'Копіювати'
	  }.bind(this), 3000);
	})
	
	$('.btn-copy').on('click', function () {
	  const thisCopyText = this.parentNode.querySelector('.copy-data').innerText;
	  // copy
	  navigator.clipboard.writeText(thisCopyText);
	  // tooltipe info
	  this.dataset.title = 'Скопійовано: ' + thisCopyText
	  setTimeout(function(){
	    this.dataset.title = 'Копіювати'
	  }.bind(this), 3000);
	})
	
	// Protection Against Double Acting Tabs Memorial
	$('[href^=#pills]').on('click', function () {
	  $('[href^=#pills]').each(function () {
	    this.style.pointerEvents = 'none'
	  })
	  setTimeout(() => {
	    $('[href^=#pills]').each(function () {
	      this.style.pointerEvents = 'auto'
	    })
	  }, 500);
	})
	// // Sticky Header
	// $(window).scroll(function () {
	//   stickyHeader(15)
	// })
	
	// $('.navbar-toggler').on('click', function () {
	//   setTimeout(function() {
	//     if($('.navbar-toggler').attr('aria-expanded') === 'true'){
	//       $('.header').addClass('bg')
	//       $('.header').addClass('lg-full-menu')
	//     }else{
	//       $('.header').removeClass('lg-full-menu')
	//       if($(window).scrollTop() == 0){
	//         $('.header').removeClass('bg')
	//       }
	//     }
	//   }, 100);
	
	// })
	
	// footer nav
	window.addEventListener("resize", function(){
	  windowResz()
	})
	
	function windowResz(){
	  if (window.innerWidth <= 1199){
	    footerNavCollapse(true)
	  }else{
	    footerNavCollapse(false)
	  }
	}
	windowResz()
	
	function footerNavCollapse(e) {
	  if(e === true){
	    $('#footer .btn-drop').each(function(){
	      $(this).removeClass('disabled').addClass('collapsed')
	    })
	    $('#footer .collapse').each(function(){
	      $(this).removeClass('show')
	    })
	  }else{
	    $('#footer .btn-drop').each(function(){
	      $(this).addClass('disabled').removeClass('collapsed')
	    })
	    $('#footer .collapse').each(function(){
	      $(this).addClass('show')
	    })
	  }
	}
	
	// function stickyHeader(toggleTop) {
	//   const top = $(window).scrollTop()
	//   if (top >= toggleTop) {
	//     $('.header').addClass('bg')
	//   } else {
	//     $('.header').removeClass('bg')
	//   }
	// }
	// stickyHeader(15)
	
	
	// Smooth anchor scrolling
	// let headerH = $('.header').height()
	// $(document).on('click', 'a[href^="#"]', function (event) {
	//   event.preventDefault();
	//   $('html, body').animate({
	//     scrollTop: $($.attr(this, 'href')).offset().top - headerH
	//   }, 500);
	// });
	
	
	// Current Menu Item
	// function currentMenuItem(){
	$('a').each(function(){
	  if (   this.href === window.location.href
	      )
	    this.classList.add('active')
	})
	// }
	// currentMenuItem()

	// search
	$('#search_btn').on('click', function () {
		searchInput()
	})
	
	function searchInput() {
		if ($('.search-input')[0].value != '') {
			location.href = 'search-results.html'
			localStorage.search_query = $('.search-input')[0].value
		} else {
			location.href = 'search-no-results.html'
			localStorage.search_query = ''
		}
	}
	
	if (localStorage.search_query !== '' && $('.search-results').length !== 0) {
		$('#search_input')[0].value = localStorage.search_query
		$('#search_query')[0].textContent = '"'+localStorage.search_query+'"'
	}
	
	// (lg,md,sm) search (show/hide)
	$('.btn-search-toggler').on('click', function () {
	  $('.search-wrap')[0].classList.toggle('active')
	})
	
	$('.search-input').on('input focus', function(){
		$(this).val() !== ''
			? $('.btn-search-reset').removeClass('hide') &&
			// if user press Enter
			$(this).on('keypress',function (e) {
				if (e.key === 'Enter') {
					e.preventDefault();
					searchInput()
				}
			})
		: $('.btn-search-reset').addClass('hide');
		
	})
	$('.btn-search-reset').on('click', function () {
		$('.search-input').val('')
		$(this).addClass('hide')
	})
	// simulate sorting search results (!)
	$('.site-dropdown-options').on('click', function () {
	  const sortCont = $('.search-sort-container')[0]
	  let thisSort = this.dataset.sort
	  switch (thisSort) {
			case 'surname':
	      sortCont.dataset.sortType = thisSort
	      sortCont.style.flexDirection = 'column'
				break
			case 'name':
	      sortCont.dataset.sortType = thisSort
	      sortCont.style.flexDirection = 'column-reverse'
				break
			case 'patronymic':
	      sortCont.dataset.sortType = thisSort
	      sortCont.style.flexDirection = 'column'
				break
	    case 'date':
	      sortCont.dataset.sortType = thisSort
	      sortCont.style.flexDirection = 'column-reverse'
	      break
		}
	})

	$('.accordion-images-wrap').each(function () {
	  let thisParent = $(this),
	      type = thisParent.hasClass('revers-type') ? 'right': 'left';
	
	  thisParent.find('[data-target^="#"]').on('click', function () {
	    let thisDataset = this.dataset.target;
	    
	    thisParent.find('.accordion-img').each(function () {
	      if (thisDataset === $(this)[0].dataset.img && !$(this)[0].classList.contains('active')) {
	        thisParent.find('.accordion-img.active')[0].classList.remove('active')
	        $(this)[0].classList.add('active')
	      }
	      accordionImg(type, thisParent, 0, 0);
	    })
	    // Smooth anchor scrolling
	    if (window.innerWidth < 992) {
	      // close accordion in second container
	      $('.btn-accordion').not(this).each(function () {
	        if (this.tagName === 'BUTTON') this.classList.add('collapsed');
	      })
	      $('.site-accordion .collapse').each(function () {
	        if ('#' + this.id !== thisDataset) this.classList.remove('show');
	      })
	      // align active accordion to screen
	      setTimeout(function () {
	        let thisOffsetTop = $('button[data-target="' + this.dataset.target + '"]').offset().top - $('#header').outerHeight() - 20 
	        thisParent.find('.collapse.show').length === 0
	          ? $('html, body').animate({ scrollTop: $('.accordion-images-wrap').offset().top - $('#header').outerHeight() - 20 }, 300)
	          : $('html, body').animate({ scrollTop: thisOffsetTop }, 300);
	      }.bind(this), 500);
	    }
	  })
	  accordionImg(type, thisParent, 0, 0);
	});
	
	function accordionImg(pos, thisParent, i, zi) {
	  // pos = type left / rigpt img position
	  thisParent.find('.accordion-img').each(function () {
	    if ($(this)[0].classList.contains('active')) {
	      $(this).css({ 'top': '0', [pos]: '0', 'z-index': '0' })
	    } else {
	      i += 2; zi++;
	      $(this).css({ 'top': i + '0px', [pos]: i + '0px', 'z-index': '-' + zi })
	    }
	  })
	
	  if (window.innerWidth < 992) {
	    thisParent.find('.accordion-img').each(function () {
	      let thisDataset = $(this)[0].dataset.img
	      $(this).appendTo($(thisDataset + ' .card-body'))
	    })
	  }
	  if (window.innerWidth > 992 && $('.card-body .accordion-img').length != 0) {
	    thisParent.find('.accordion-img').each(function () {
	      $(this).appendTo(thisParent.find('.images-wrap'))
	    })
	  }
	}
	
	/* show / hide #accordion 2 first elem */
	if (window.innerWidth > 992 && $('#accordionCapabilities_2').length !== 0) {
	  $('#accordionCapabilities_2 .btn-accordion')[0].classList.remove('collapsed');
	  $('#accordionCapabilities_2 .btn-accordion')[0].setAttribute('aria-expanded', 'true');
	  $('#accordionCapabilities_2 .collapse')[0].classList.add('show');
	}
	
	// update accordion
	$(window).on('resize', function () {
	  if ($('.accordion-images-wrap').length !== 0) {
	    $('.accordion-images-wrap').each(function () {
	      let thisParent = $(this),
	        type = thisParent.hasClass('revers-type') ? 'right' : 'left';
	      accordionImg(type, thisParent, 0, 0);
	    });
	  }
	})
	// function mySlickInit(){
	  $('.steps-wrap').slick({
	    dots: true,
	    infinite: false,
	    arrows: false,
	    slidesToShow: 4,
	    appendDots: '.steps-wrap',
	    responsive: [
	      {
	        breakpoint: 992,
	        settings: {
	          slidesToShow: 2
	        }
	      },
	      {
	        breakpoint: 768,
	        settings: {
	          slidesToShow: 1
	        }
	      }
	    ]
	  });
	// }
	// if(window.innerWidth <= 992){
	// }
	// $(window).on('resize', function (){
	//   mySlickInit()
	// //   // $('.steps-wrap').slick({unslick})
	// // }
	// }) 
	// // can be deleted: $(window).on...
	// //   
	// //   if(window.innerWidth < 992){
	// //     mySlickInit()
	// //   }
	// Dropdown Menu Bottom Form
	
	$('[data-dropdown-for]').on('click', function () {
	  $('[data-dropdown-id="' + this.dataset.dropdownFor + '"]').toggleClass('active').addClass('in-active')
	})
	
	$('.site-dropdown').on('click',function (e) {
	  
	  $('.site-dropdown.active').not($(this)).removeClass('active in-active')
	  $(this).toggleClass('active').addClass('in-active')
	  
	  let selectSort = $(this).find('.select-sort'),
	    selectSortOptoon = $(this).find('.site-dropdown-options:not(.dis)'),
	    hideSelectOption = $(this).find('input.select-dropdown').length !== 0 ? $(this).find('.select-dropdown') : $(this).find('.select-dropdown option');
	  
	  if(selectSortOptoon.is(e.target)){
	    let selectVal = e.target.dataset.val || $(e.target).text(),
	        selectText = $(e.target).text();
	    selectSort.text(selectText)
	    hideSelectOption.val(selectVal).trigger('change')
	    
	    // curent item (.active)
	    selectSortOptoon.each(function () { $(this).removeClass('curent') })
	    $(this).find('.error').removeClass('error')
	    $(e.target).addClass('curent')
	  }
	})
	
	// ( ? )
	// $('img').on("load", function() {
	// console.log('load img');
	// })
	
	
	if (document.location.href.indexOf('#gallery') >= 1) {
	  $('.fancybox__button--close').trigger('click')
	}
	
	// gallery tab-2...
	Fancybox.bind('[data-fancybox="gallery"]', {
	  click: false,
	  dragToClose: false,
	  // infinite: false,
	  Image: {
	    zoom: true,
	    fit: 'cover',
	    click: false,
	    wheel: 'slide',
	  },
	
	  Toolbar: {
	    display: [
	      {
	        id: 'counter',
	        // position: "center",
	      },
	      // "zoom",
	      // "slideshow",
	      // "fullscreen",
	      // "thumbs",
	      'close',
	    ],
	  },
	
	  on: {
	    initLayout: function (fancybox) {
	      // Create left column
	      const $leftCol = document.createElement('div')
	      $leftCol.classList.add('fancybox__leftCol')
	
	      while (fancybox.$container.firstChild) {
	        $leftCol.appendChild(fancybox.$container.firstChild)
	      }
	      // Create right column
	      const $rightCol = document.createElement('div')
	      $rightCol.classList.add('fancybox__rightCol')
	      // Create comments-box
	      const $comments = document.createElement('div')
	      $rightCol.appendChild($comments)
	      fancybox.$comments = $comments
	
	      // Add elements to DOM
	      fancybox.$container.appendChild(fancybox.$backdrop)
	
	      fancybox.$container.appendChild($leftCol)
	      fancybox.$container.appendChild($rightCol)
	
	      fancybox.$leftCol = $leftCol
	      fancybox.$rightCol = $rightCol
	    },
	    'Carousel.ready Carousel.change': function (
	      fancybox,
	      carousel,
	      slideIndex
	    ) {
	      // Update comments-box
	      // Get index of the current gallery item
	      slideIndex =
	        slideIndex === undefined ? carousel.options.initialPage : slideIndex
	      // Get link related to current item
	      const $trigger = fancybox.items[slideIndex].$trigger
	      // Get data from `data-comments` attribute
	      // const data = $trigger.dataset.comments || ''
	      const data = $trigger.querySelector('.sidebar-img-comments').innerHTML || ''
	      // Update comments
	      fancybox.$comments.innerHTML = data
	      $('.fancybox__container').addClass('active memorial-gallery')
	    },
	  },
	})
	// Go to the Gift button
	$('.btn-goto-add-gift').on('click', function () {
	  $('html, body').animate({ scrollTop: $('.memorial-sidebar .btn-add-gift').offset().top - $('#header').outerHeight() - 150 }, 500);
	})
	
	// calculation of gifts, imitation of adding a new gift
	let giftsCounter = 0;
	function giftsCount() {
	  giftsCounter++;
	  $('#gifts-count')[0].dataset.giftsCount = giftsCounter
	}
	
	function newImg(src) {
	  let giftImg = new Image
	  giftImg.src = src
	  return giftImg
	}
	$('#giftsModal .gift-img').on('click', function () {
	  let giftWrap = document.createElement('div'),
	    thisSrc = $(this).children('img')[0].src
	  // delete the third last gift to start a new gift
	  if ($('.memorial-sidebar .gift-no').length === 0 & $('.memorial-sidebar .gift-img').length === 3) {
	    $('.memorial-sidebar .gift-img')[2].remove()
	  }
	  giftWrap.classList.add('gift-img')
	  giftWrap.append(newImg(thisSrc))
	
	  // add img gift to sidebar
	  $('.memorial-sidebar .gifts-wrap').prepend(giftWrap)
	  // add img gift to header memorial img
	  $('.memorial-header .gift-wrap').html(newImg(thisSrc))
	
	  // replace the gray icon with a gift
	  if ($('.memorial-sidebar .gift-no').length) {
	    $('.memorial-sidebar .gift-no')[0].remove()
	  }
	  
	  // modal hide
	  $('#giftsModal').modal('hide')
	
	  // appdate count on sidebar
	  giftsCount()
	
	})
	$('.post-slider').slick({
	  dots: false,
	  infinite: false,
	  arrows: true,
	  slidesToShow: 3,
	  prevArrow: '<div class="post-slider-prev"><svg width="30" height="12" viewBox="0 0 30 12" fill="none" xmlns="http://www.w3.org/2000/svg" ><path d="M5.48611 11.4038C5.6438 11.4038 5.8015 11.3442 5.92073 11.2231C6.16111 10.9827 6.16111 10.5923 5.92073 10.3519L1.12843 5.55962C0.888049 5.31924 0.497668 5.31924 0.257284 5.55962C0.0169001 5.80001 0.0169001 6.19039 0.257284 6.43077L5.04957 11.2231C5.17073 11.3442 5.32842 11.4038 5.48611 11.4038Z" fill="#323232"/><path d="M0.693782 6.61154H29.3092C29.6496 6.61154 29.9246 6.33654 29.9246 5.99615C29.9246 5.65577 29.6496 5.38077 29.3092 5.38077H2.18032L5.91494 1.64615C6.15532 1.40577 6.15532 1.01538 5.91494 0.775C5.67455 0.534615 5.28417 0.534615 5.04378 0.775L0.257244 5.56154C0.0803209 5.73846 0.0283974 6.00192 0.124551 6.23269C0.220705 6.46154 0.445705 6.61154 0.693782 6.61154V6.61154Z" fill="#323232"/></svg></div >',
	  nextArrow: '<div class="post-slider-next"><svg width="30" height="12" viewBox="0 0 30 12" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M24.5154 11.4038C24.3577 11.4038 24.2 11.3442 24.0807 11.2231C23.8404 10.9827 23.8404 10.5923 24.0807 10.3519L28.873 5.55962C29.1134 5.31924 29.5038 5.31924 29.7442 5.55962C29.9846 5.80001 29.9846 6.19039 29.7442 6.43077L24.9519 11.2231C24.8307 11.3442 24.673 11.4038 24.5154 11.4038Z" fill="#323232"/><path d="M29.3077 6.61154H0.692289C0.351904 6.61154 0.0769043 6.33654 0.0769043 5.99615C0.0769043 5.65577 0.351904 5.38077 0.692289 5.38077H27.8211L24.0865 1.64615C23.8461 1.40577 23.8461 1.01538 24.0865 0.775C24.3269 0.534615 24.7173 0.534615 24.9577 0.775L29.7442 5.56154C29.9211 5.73846 29.9731 6.00192 29.8769 6.23269C29.7808 6.46154 29.5558 6.61154 29.3077 6.61154V6.61154Z" fill="#323232"/></svg></div>',
	  appendArrows: '.post-slider-wrap',
	  responsive: [
	    {
	      breakpoint: 992,
	      settings: {
	        slidesToShow: 2,
	        arrows: false,
	        dots: true,
	        appendDots: '.post-slider-dots',
	        asNavFor: '.post-slider-dots .slick-dots',
	      }
	    },
	    {
	      breakpoint: 768,
	      settings: {
	        arrows: false,
	        dots: true,
	        slidesToShow: 1,
	        appendDots: '.post-slider-dots',
	        asNavFor: '.post-slider-dots .slick-dots',
	      }
	    }
	  ]
	});
	// setTimeout(() => {
	$('.post-slider-dots .slick-dots').slick({
	  dots: false,
	  infinite: false,
	  arrows: false,
	  slidesToShow: 4,
	  slidesToScroll: 1,
	  asNavFor: '.post-slider',
	  centerMode: true,
	});
	// }, 3000);
	if (document.location.href.indexOf('#post-gallery') >= 1) {
	  $('.fancybox__button--close').trigger('click')
	}
	// gallery tab-2...
	Fancybox.bind('[data-fancybox="post-gallery_1"], [data-fancybox="post-gallery_2"]', {
	  // click: false,
	  // dragToClose: false,
	  // infinite: false,
	  Image: {
	    zoom: true,
	    // fit: 'cover',
	    // click: false,
	    // wheel: 'slide',
	  },
	  Thumbs: {
	    autoStart: false,
	  },
	  Toolbar: {
	    display: [
	      {
	        id: 'counter',
	        // position: "center",
	      },
	      // "zoom",
	      // "slideshow",
	      // "fullscreen",
	      // "thumbs",
	      'close',
	    ],
	  },
	
	})
	//  Comment Body  ( cut text... + img )
	const commBodMaxH = window.innerWidth > 768 ? 160 : 150 ;
	function commentParent(){
	let commentBodyArr = {}
	for (let i = 0; i < $('.comments-user-wrap .comment-body').length; i++) {
	
		commentBodyArr[i] = $('.comments-user-wrap .comment-wrap')[i].clientHeight;
	
	  function commBody() {
	    if (commentBodyArr[i] > commBodMaxH) {
	      $(this)[0].classList.add('excerpt-text', 'close')
	      $(this).find('.comment-wrap').css('max-height', commBodMaxH)
	
	      const overlay = document.createElement('div')
	      overlay.classList.add('overlay')
	      const btnExcerpt = document.createElement('button')
	      btnExcerpt.classList.add('btn-excerpt')
	      btnExcerpt.innerHTML +=
	        '<svg class="icon-doble-brecket" width="15" height="20" viewBox="0 0 15 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M15 9.44134L13.9051 8.46143L7.5 14.2429L1.09489 8.46143L0 9.44134L7.5 16.1537L15 9.44134Z" fill="#323232" fill-opacity="0.8"/><path d="M15 4.8261L13.9051 3.84619L7.5 9.62768L1.09489 3.84619L0 4.8261L7.5 11.5385L15 4.8261Z" fill="#323232" fill-opacity="0.8"/></svg>'
	
	      $(this)[0].querySelector('.comment-wrap').appendChild(overlay)
	      $(this)[0]
	        .querySelector('.comment-wrap')
	        .insertAdjacentElement('afterend', btnExcerpt)
	    }
	
	    if ($(this).find('.btn-excerpt')[0] != undefined) {
	        $(this).find('.btn-excerpt')[0].addEventListener('click', function () {
	          if ($(this).parent()[0].classList.contains('close')) {
	            $(this).parent().find('.comment-wrap').css('max-height', commentBodyArr[i])
	          } else {
	            $(this).parent().find('.comment-wrap').css('max-height', commBodMaxH)
	          }
	          $(this).parent()[0].classList.toggle('close')
	          $(this)[0].classList.toggle('active')
	        })
	      }
	    }
	  // commBody.call($('.comments-user-wrap .comment-body')[i])
	
		}
		
	}
	
	let commentChildBodyArr = {},
			childCommentsArr = $('.comments-user-wrap .child-comments-block').length;
	
	// this function will be called either at the end of the loop for child comments or at this point if no child comments were found
	if (childCommentsArr === 0) { commentParent()}
	
	for (let i = 0; i < childCommentsArr; i++) {
		commentChildBodyArr[i] = $('.comments-user-wrap .child-comments-block')[i].clientHeight
	
			function commChildBody() {
			if (commentChildBodyArr[i] > commBodMaxH) {
				$(this)[0].classList.add('excerpt-text', 'close')
				$(this).find('.comment-text').css('max-height', commBodMaxH)
	
				const overlay = document.createElement('div')
				overlay.classList.add('overlay')
				const btnExcerpt = document.createElement('button')
				btnExcerpt.classList.add('btn-excerpt')
				btnExcerpt.innerHTML +=
					'<svg class="icon-doble-brecket" width="15" height="20" viewBox="0 0 15 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M15 9.44134L13.9051 8.46143L7.5 14.2429L1.09489 8.46143L0 9.44134L7.5 16.1537L15 9.44134Z" fill="#323232" fill-opacity="0.8"/><path d="M15 4.8261L13.9051 3.84619L7.5 9.62768L1.09489 3.84619L0 4.8261L7.5 11.5385L15 4.8261Z" fill="#323232" fill-opacity="0.8"/></svg>'
	
				$(this)[0].querySelector('.comment-text').appendChild(overlay)
				$(this)[0]
					.querySelector('.comment-text')
					.insertAdjacentElement('afterend', btnExcerpt)
			}
	
			if ($(this).find('.btn-excerpt')[0] != undefined) {
				$(this)
					.find('.btn-excerpt')[0]
					.addEventListener('click', function () {
						if ($(this).parent()[0].classList.contains('close')) {
							$(this)
								.parent()
								.find('.comment-text')
								.css('max-height', commentChildBodyArr[i])
						} else {
							$(this)
								.parent()
								.find('.comment-text')
								.css('max-height', commBodMaxH)
						}
						$(this).parent()[0].classList.toggle('close')
						$(this)[0].classList.toggle('active')
					})
			}
		}
		commChildBody.call($('.comments-user-wrap .child-comments-block')[i])
	
		if (i == $('.comments-user-wrap .child-comments-block').length - 1) {
			commentParent()
		}
	}
	// delete this code (start code)
	// $('#sucsesModal').modal('show')
	// $('#shareLinksModal').modal('show')
	
	// delete this code (start code)
	// setInterval(function () {
	function dataTitlePos() {
	$('[data-title]').each(function() {
	    let thisElPos = this.getBoundingClientRect(),
	      thisElRightPos = window.innerWidth - thisElPos.right
	    if (thisElPos.x < 100) {
	      this.classList.remove('right')
	      this.classList.add('left')
	    } else {
	      this.classList.remove('left')
	    }
	    if (thisElRightPos < 100) {
	      this.classList.remove('left')
	      this.classList.add('right')
	    } else {
	      this.classList.remove('right')
	    }
	  })
	}
	dataTitlePos()
	
	// Update tooltip position (!)
	$(window).on('click', function(){
	  setTimeout(() => { dataTitlePos() }, 500);
	})
	
	$('.btn-lock').on('click',function(e){
	  e.preventDefault() // because we are inside the link
	})
	// (!important a > button)
	$('a:not(.fancybox) button').on('click', function (e) {
	  e.preventDefault() // because we are inside the link
	})
	$('[data-favorite]').on('click', function (e) {
	  if ($(this)[0].getAttribute('data-favorite') === 'remove-from-favorite') {
	    this.setAttribute('data-favorite', 'add-to-favorite')
	    this.setAttribute('data-title', 'Додати в Обрані Меморіали')
	  } else {
	    this.setAttribute('data-favorite', 'remove-from-favorite')
	    this.setAttribute('data-title', 'Видалити з Обраного')
	  }
	})
	  // find img: not atrr width
	  // $('img').each(function (){
	  //   if(!this.hasAttribute('width')){
	  //
	  //   }
	  // })
	
	$('a.btn-circle').blur() // del m.b.
	$('a.btn-circle').on('click', function (e) {
	  e.preventDefault()
	  let n = parseFloat(window.getComputedStyle(this).transitionDuration) * 1000;
	  setTimeout(() => { window.location = this.href }, n);
	})

	/* ********************
	  User Cabinet Menu 
	******************** */
	const user_cabinet_menu = $('#user_cabinet_menu')
	
	$('.btn-back-to-menu').on('click', function (e) {
	  e.preventDefault()
	  user_cabinet_menu.addClass('active')
	})
	
	user_cabinet_menu.find('.active').on('click', function(e){
	  e.preventDefault()
	  user_cabinet_menu.removeClass('active')
	})
	
	$('#delete_accout').on('click',function(){
	  $('#delAccModal').modal('show')
	})
	
	$('.user-cabinet-content .card-header').on('click', function () {
	  setTimeout(() => {
	    $('html, body').animate({ scrollTop: $(this).offset().top - $('#header').outerHeight() - 20 }, 300)
	  }, 500);
	})
	
	/* ************************
	  Get Countries + Cities
	************************ */
	function getCountriesCities(countries, cities) {
	  if (countries.length && cities.length) {
	
	    // example of countries and cities
	    let requestUrl = 'https://raw.githubusercontent.com/David-Haim/CountriesToCitiesJSON/master/countriesToCities.json';
	    let xhr = new XMLHttpRequest();
	
	    xhr.open('GET', requestUrl, true);
	    xhr.responseType = 'json';
	    xhr.send()
	
	    xhr.onload = function () {
	      let countryList = xhr.response,
	        arrCountryList = Object.keys(countryList)
	      arrCountryList.sort()
	      countryFunction(arrCountryList);
	    }
	
	    function countryFunction(jsonObj) {
	      // for (let key in jsonObj) {
	      jsonObj.forEach(function (item) {
	        if (item.length !== 0) {
	          let countryName = document.createElement('li')
	          countryName.classList.add('site-dropdown-options')
	          countryName.innerHTML = item
	          countries.append(countryName)
	        }
	      })
	    }
	
	    $(countries)[0].parentNode.querySelector('.select-dropdown').change = function () {
	      const chosenCountry = this.value;
	
	      xhr.open('GET', requestUrl, true);
	      xhr.responseType = 'json';
	      xhr.send()
	      xhr.onload = function () {
	        let countryList = xhr.response;
	        countryList[chosenCountry].sort().forEach(function (item) {
	          $(cities).empty();
	          setTimeout(function () {
	            let cityName = document.createElement('li')
	            cityName.classList.add('site-dropdown-options')
	            cityName.innerHTML = item;
	            cities.append(cityName);
	          }, 100);
	        });
	      }
	    }
	    
	  }
	}
	getCountriesCities($('#country'), $('#city'))
	getCountriesCities($('#burial_countries_list'), $('#burial_cities_list'))
	
	/* ******************************
	  Calendar Datapicker Settings
	****************************** */
	pickmeup.defaults.locales['uk'] = {
	  days: ['Неділя', 'Понеділок', 'Вівторок', 'Середа', 'Четвер', 'П`ятниця', 'Субота'],
	  daysShort: ['Нед', 'Пон', 'Вів', 'Сер', 'Чет', 'Птн', 'Суб'],
	  daysMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],
	  months: ['Січень', 'Лютий', 'Березень', 'Квітень', 'Травень', 'Червень', 'Липень', 'Серпень', 'Вересень', 'Жовтень', 'Листопад', 'Грудень'],
	  monthsShort: ['Січ', 'Лют', 'Бер', 'Кві', 'Тра', 'Чер', 'Лип', 'Сер', 'Вер', 'Жов', 'Лис', 'Гру']
	};
	function pmuInit(input, c) {
	
	  // if press TAB ... show calendar
	  if ($(input)[0]) {
	    $(input)[0].onfocus = function () { this.click(); this.blur(); }
	    $(input)[0].onclick = function () { this.blur() }
	  }
	
	  pickmeup($(input)[0], {
	    locale: 'uk',
	    format: 'm.d.Y',
	    position: 'bottom',
	    first_day: 1,
	    hide_on_select: true,
	    prev: '&#x276E;',
	    next: '&#x276F;',
	    default_date: false,
	    max: 'today',
	    // min: '05.05.2023',
	    min: c
	  })
	  $('.pickmeup').each(function () {
	    $(this).css('width', this.__pickmeup_target.offsetWidth)
	  })
	  $(input).on('click', function () {
	    $('.pickmeup').each(function () {
	      $(this).css('width', this.__pickmeup_target.offsetWidth)
	    })
	
	    if (this.id === 'birth_day') {
	      $('#death_day')[0].value = ''
	    }
	
	    pickmeup($(input)[0]).update()
	  })
	}
	
	// birthday calendar initialization
	pmuInit('#birth_day')
	// calendar initialization for date of death (choice of date of death depending on the date of birth )
	$('#death_day').on('click', function () {
	  let d = $('#birth_day')[0].value
	  if (d === '') {
	    $(this)[0].blur()
	    $('#birth_day')[0].focus()
	    $('#birth_day')[0].click()
	    return false;
	  }
	  pickmeup($('#death_day')[0]).destroy()
	  pmuInit('#death_day', d)
	  pickmeup($('#death_day')[0]).update()
	})
	// initializing the calendar to create events
	pmuInit('#memorable_event_date_day')
	let old_user_data_filds = '', new_user_data_filds, userImgPath = $('#user_data_form .select-img img').length ? $('#user_data_form .select-img img')[0].src : '';
	let emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
	const
	  userDataForm = $('#user_data_form'),
	  userLastName = $('#user_last_name'),
	  dataUserName = $('#user_name'),
	  dataUserSurname = $('#user_surname'),
	  dataUserEmail = $('#user_email');
	
	function oldUserDataFilds() {
	  old_user_data_filds = '';
	  $('#user_data_form input').each(function () {
	    // if (this.type !== 'file') {
	      old_user_data_filds += this.value
	    // }
	  })
	}
	oldUserDataFilds()
	
	function isChangeForm(){
	  new_user_data_filds = ''
	  $('#user_data_form input').each(function () {
	    new_user_data_filds += this.value
	  })
	  // setTimeout(function () {
	    if (old_user_data_filds !== new_user_data_filds || old_user_data_filds.length !== new_user_data_filds.length) {
	      userDataForm[0].dataset.change = true
	    } else {
	      userDataForm[0].dataset.change = false
	    }
	  // }, 300);
	}
	
	/* for a beautiful display of emale in the cabinet */
	function thisValInp() {
	  if (this.id === 'user_email') {this.nextElementSibling.textContent = this.value}
	}
	thisValInp.call(dataUserEmail[0])
	
	// input file
	$('#load_user_img').on('change', function () {
	  if (this.files && this.files[0]) {
	    let readerImg = new FileReader();
	    readerImg.onload = function (e) {
	      // console.log(e.total > 100_000_000);
	      // console.log(this.files.size);
	      userImgPath = e.target.result;
	      $('#user_data_form .select-img img')[0].src = userImgPath
	    }
	    // readerImg.readAsDataURL(e.target.files[0]); // ? how better
	    readerImg.readAsDataURL(this.files[0]);
	    // activate the save button
	    isChangeForm()
	  }
	})
	
	// reset the image
	$('#del_user_img').on('click', function (e) {
	  // assign the default image
	  $('#user_data_form .select-img img')[0].src = this.dataset.resetImg;
	  // variable for recording the old value
	  userImgPath = this.dataset.resetImg;
	  // reset the input
	  $('#load_user_img')[0].value =''
	  $('#load_user_img')[0].setAttribute('value', '')
	  // activate the save button
	  isChangeForm()
	})
	
	
	// all inputs
	$('#user_data_form input').on('keyup', function (e) {
	  e.preventDefault();
	  if (this.id === 'user_email') {
	    // this.value = this.value.replace(/[а-яА-Я]/g,'');
	    thisValInp.call(dataUserEmail[0])
	  }
	  // activate the save button
	  isChangeForm()
	})
	
	// submit - save / edit
	$('#btn_edit_user_data').on('click', function (e) {
	  // e.preventDefault()
	
	  const thisEvent = e;
	        e.target.textContent = "Зберегти"
	  
	  if (e.target.form.getAttribute('disabled') === 'true') {
	    e.target.form.setAttribute('disabled', 'false')
	  } else {
	
	    // validation inputs
	    if (userLastName[0].value == '') {
	      userLastName.addClass('error')
	      $('#' + userLastName[0].id + ' ~ .error-mess')[0].textContent = "Додайте інформацію"
	    }
	    if (userLastName[0].value.length === 1) {
	      userLastName.addClass('error')
	      $('#' + userLastName[0].id+' ~ .error-mess')[0].textContent = 'Не меньше двох символiв'
	    }
	
	    if (dataUserName[0].value == '') {
	      dataUserName.addClass('error')
	      $('#' + dataUserName[0].id + ' ~ .error-mess')[0].textContent = "Додайте інформацію"
	    }
	    if (dataUserName[0].value.length === 1) {
	      dataUserName.addClass('error')
	      $('#' + dataUserName[0].id+' ~ .error-mess')[0].textContent = 'Не меньше двох символiв'
	    }
	
	    if (dataUserSurname[0].value.length === 1) {
	      dataUserSurname.addClass('error')
	      $('#' + dataUserSurname[0].id+' ~ .error-mess')[0].textContent = 'Не меньше двох символiв'
	    }
	
	    if (dataUserEmail[0].value == '') {
	      dataUserEmail.addClass('error')
	      $('#'+dataUserEmail[0].id+' ~ .error-mess')[0].textContent = 'Вкажiть ваш Email'
	    }
	    
	    if (!emailReg.test(dataUserEmail[0].value)) {
	      let clarificationText = dataUserEmail[0].value.includes(' ') ? ' (видаліть пробіли)' : '';
	      dataUserEmail.addClass('error')
	      $('#' + dataUserEmail[0].id + ' ~ .error-mess')[0].textContent = 'Перевірте E-mail' + clarificationText
	    }
	
	    if ($('#user_data_form .error').length){ return false; }
	
	    setTimeout(() => {
	      // remember the old image value
	      $('#load_user_img')[0].dataset.oldValue = userImgPath;
	      userDataForm[0].setAttribute('disabled', 'true');
	      userDataForm[0].dataset.change = false;
	      thisEvent.target.textContent = "Редагувати";
	      oldUserDataFilds();
	      // old values for fields
	      $('#user_data_form input').each(function () {
	      // if (this.type !== 'file') {
	        this.setAttribute('value', this.value)
	        // }
	      })
	    }, 10);
	    
	    
	  }
	
	})
	
	// Btn Form.Reset
	$('#btn_reset_user_data_form').on('click', function (e) {
	  e.target.form.reset()
	  $('#user_data_form .select-img img')[0].src = $('#load_user_img')[0].dataset.oldValue
	  thisValInp.call(dataUserEmail[0])
	  e.target.form.dataset.change = false
	  e.target.form.setAttribute('disabled', 'true')
	  $('#btn_edit_user_data')[0].textContent = "Редагувати"
	})
	
	userDataForm.on('submit', function (e) {
	  e.preventDefault()
	})
	$('#change_pass').on('click', function(e){
	  $('.pass-recovery')[0].hidden = false
	  this.form.hidden = true
	  scrollToEl($('.pass-recovery'))
	
	  centeredIconForInput()
	})
	$('#btn_back_to_us_data').on('click', function(){
	  $('.pass-recovery')[0].hidden = true
	  $('#user_data_form')[0].hidden = false
	  scrollToEl($('#user_data_form'))
	})
	
	$('#pass_recovery').on('submit', function (e) {
	  e.preventDefault()
	
	  if($('#current_pas').val() !== admin_data.pass ||  $('#current_pas').val() === ''){
	    $('#current_pas').addClass('error')
	  } else {
	    $('#current_pas').removeClass('error')
	  }
	
	  if($('#new_pas').val() === ''){
	    $('#new_pas').addClass('error')
	    $('#new_pas ~ .error-mess')[0].textContent = 'Вкажіть пароль'
	  }else if($('#current_pas').val() === $('#new_pas').val()){
	    $('#new_pas').addClass('error')
	    $('#new_pas ~ .error-mess')[0].textContent = 'Вказано поточний пароль'
	  } else {
	    $('#new_pas').removeClass('error')
	  }
	
	
	  // check error
	  if ($('#pass_recovery .error').length) {
	    return false; 
	  }
	
	  $('#sucsesModalLabel').text('Пароль змінено')
	  setTimeout(function () {
	    $('#complainModal').modal('hide')
	    $('#sucsesModal').modal('show')
	    $('.pass-recovery')[0].hidden = true
	    $('#user_data_form')[0].hidden = false
	    setTimeout(function () {
	      $('#sucsesModal').modal('hide')
	    }, 5000);
	  }, 1000);
	})
	// Remove Memorial
	$('#btnConfirmDelMemorial').on('click', function () {
	  $('#delMemorialModal').modal('hide')
	  $('#infoModal').modal('show')
	  $('#infoModal .modal-title')[0].innerText = this.dataset.confirmText
	  $('#' + this.dataset.whichDelMemorial).remove()
	})
	$('[data-parent-id-memorial]').on('click', function () {
	  $('#delMemorialModal').modal('show')
	  $('#btnConfirmDelMemorial')[0].setAttribute('data-which-del-memorial', this.dataset.parentIdMemorial)
	})

	/*****************************************
	  2 - Forming a gallery for the memorial.
	******************************************/
	
	$('#formGallery').on('submit', function (e) {
	  e.preventDefault();
	
	  let formData = new FormData(e.target);
	  let jsonData = {};
	
	  formData.forEach(function (value, key) { jsonData[key] = value; });
	  jsonData = JSON.stringify(jsonData);
	
	  console.log(jsonData);
	
	  $.ajax({
	    url: "/",
	    type: "POST",
	    data: jsonData,
	    success: function (jsonData) {
	      // code
	      $('#headCrMem_3').removeAttr('style')
	    },
	    error: function (error) {
	      // code
	    }
	  });
	
	})
	
	let inputGalleryImg = document.querySelector('#gallery_img');
	const preview = document.querySelector('#gallery_img_imgs_previews');
	
	const button = document.getElementById('btn_save_gallery');
	// list of files
	const fileList = [];
	
	
	// Send
	if(button){button.addEventListener('click', (e) => {
	  // e.preventDefault();
	  if (!fileList.length) {
	    return;
	  }
	  // console.log(JSON.stringify(fileList.map(({ name, modified, size, description }) => ({ name, modified, size, data: '<[!FILEDATA]>', description })), null, 2));
	});}
	
	if (inputGalleryImg) {
	  inputGalleryImg.addEventListener('change', onChange);
	}
	
	function onChange() {
	  
	  [...inputGalleryImg.files].forEach(file => {
	    // We create a reader
	    const reader = new FileReader;
	      // We hang an event on the reader
	      reader.addEventListener('loadend', () => {
	      // List element preview
	      const itemWrap = document.createElement('div');
	            itemWrap.classList.add('select-img-wrap', 'square-type')
	
	      const item = document.createElement('div');
	            item.classList.add('select-img')
	      // Picture for a pre -examination
	      const image = new Image;
	      // URI Pictures
	      image.src = `data:${file.type};base64,${btoa(reader.result)}`;
	
	      const editImg = document.createElement('button');
	            editImg.type = "button";
	            editImg.classList.add('btn-load-select-img', 'btn-edit')
	            editImg.id = 'btn_edit_gallery_img'
	        editImg.innerHTML = '<svg width = "30" height = "30" viewBox = "0 0 30 30" fill = "none" xmlns = "http://www.w3.org/2000/svg" ><circle cx="15" cy="15" r="15" fill="currentColor"></circle><path class="pen" d="M21.4873 10.987L20.1844 12.2899L17.6714 9.85386L19.0128 8.51249C19.3409 8.18435 19.7859 8 20.25 8C20.7141 8 21.1591 8.18435 21.4873 8.51249C21.8154 8.84062 21.9997 9.28568 21.9997 9.74974C21.9997 10.2138 21.8154 10.6588 21.4873 10.987ZM19.4214 13.052L11.4108 21.0626L8 22.0129L8.93538 18.589L16.9163 10.6081L19.4214 13.052Z"></path></svg>';
	      const сhangeImage = document.createElement('input');
	            сhangeImage.type = 'file';
	            сhangeImage.id = 'сhange_image'
	            сhangeImage.setAttribute('hidden', '')
	      const remove = document.createElement('button');
	            remove.type = "button";
	            remove.classList.add('btn-del-select-img', 'btn-delete')
	            remove.innerHTML = '<svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="15" cy="15" r="15"></circle><path d="M17.4998 7.5C17.7209 7.5 17.9328 7.5878 18.0891 7.74408C18.2454 7.90036 18.3332 8.11232 18.3332 8.33333H19.9998C20.2209 8.33333 20.4328 8.42113 20.5891 8.57741C20.7454 8.73369 20.8332 8.94565 20.8332 9.16667C20.8332 9.38768 20.7454 9.59964 20.5891 9.75592C20.4328 9.9122 20.2209 10 19.9998 10H9.99984C9.77882 10 9.56686 9.9122 9.41058 9.75592C9.2543 9.59964 9.1665 9.38768 9.1665 9.16667C9.1665 8.94565 9.2543 8.73369 9.41058 8.57741C9.56686 8.42113 9.77882 8.33333 9.99984 8.33333H11.6665C11.6665 8.11232 11.7543 7.90036 11.9106 7.74408C12.0669 7.5878 12.2788 7.5 12.4998 7.5H17.4998Z" fill="currentColor"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M10 10.8334H20V20.8334C20 21.2754 19.8244 21.6993 19.5118 22.0119C19.1993 22.3244 18.7754 22.5 18.3333 22.5H11.6667C11.2246 22.5 10.8007 22.3244 10.4882 22.0119C10.1756 21.6993 10 21.2754 10 20.8334V10.8334ZM12.9167 12.5C12.8062 12.5 12.7002 12.5439 12.622 12.6221C12.5439 12.7002 12.5 12.8062 12.5 12.9167V20.4167C12.5 20.5272 12.5439 20.6332 12.622 20.7113C12.7002 20.7895 12.8062 20.8334 12.9167 20.8334C13.0272 20.8334 13.1332 20.7895 13.2113 20.7113C13.2894 20.6332 13.3333 20.5272 13.3333 20.4167V12.9167C13.3333 12.8062 13.2894 12.7002 13.2113 12.6221C13.1332 12.5439 13.0272 12.5 12.9167 12.5ZM17.0833 12.5C16.9728 12.5 16.8668 12.5439 16.7887 12.6221C16.7106 12.7002 16.6667 12.8062 16.6667 12.9167V20.4167C16.6667 20.5272 16.7106 20.6332 16.7887 20.7113C16.8668 20.7895 16.9728 20.8334 17.0833 20.8334C17.1938 20.8334 17.2998 20.7895 17.378 20.7113C17.4561 20.6332 17.5 20.5272 17.5 20.4167V12.9167C17.5 12.8062 17.4561 12.7002 17.378 12.6221C17.2998 12.5439 17.1938 12.5 17.0833 12.5Z" fill="currentColor"></path></svg>';
	      const descrTextarea = document.createElement('textarea');
	            descrTextarea.name = "gallery_descr_text"
	            descrTextarea.id = "gallery_descr_text"
	            descrTextarea.placeholder = "Напишіть текст"
	            descrTextarea.setAttribute('maxlength', '1000')
	      const descrTextareaCounter = document.createElement('span');
	            descrTextareaCounter.classList.add('textarea-maxlength')
	            descrTextareaCounter.innerText = '0/1000'
	            
	      
	      // The element of the array fileList
	      let fileItem = {
	        name: file.name,
	        modified: file.lastModified,
	        size: file.size,
	        data: reader.result,
	        description: ''
	      };
	      // Add the element to the unloading list
	      fileList.push(fileItem);
	      
	      editImg.addEventListener('click', function () {
	        let galleryDescrModal = $('#galleryDescrModal')
	        galleryDescrModal.modal('show')
	        galleryDescrModal[0].querySelector('img').setAttribute('src', this.parentNode.querySelector('img').src)
	        galleryDescrModal[0].querySelector('#gallery_descr_text').replaceWith(descrTextarea);
	        galleryDescrModal[0].querySelector('#gallery_descr_text').value = fileList[fileList.indexOf(fileItem)].description
	        galleryDescrModal[0].querySelector('#сhange_image').replaceWith(сhangeImage);
	        galleryDescrModal[0].querySelector('.textarea-maxlength').replaceWith(descrTextareaCounter);
	      })
	      // change one image to another in a gallery
	      сhangeImage.addEventListener('change', function () {
	        if (this.files && this.files[0]) {
	          let readerImg = new FileReader();
	
	          readerImg.onload = function (e) {
	
	            $('#galleryDescrModal')[0].querySelector('img').setAttribute('src', e.target.result)
	            $(itemWrap)[0].querySelector('img').src = e.target.result;
	
	            [...сhangeImage.files].forEach(file => {
	              fileList[fileList.indexOf(fileItem)].name = file.name
	              fileList[fileList.indexOf(fileItem)].modified = file.lastModified
	              fileList[fileList.indexOf(fileItem)].size = file.size
	              fileList[fileList.indexOf(fileItem)].data = reader.result
	            });
	            setTimeout(() => { onChange() }, 100)
	          }
	          readerImg.readAsDataURL(this.files[0]);
	        }
	      })
	
	      // add & edit description
	      descrTextarea.addEventListener('focus', function () {
	        $(this).next('.textarea-maxlength').text($(this).val().length + '/' + $(this)[0].getAttribute('maxlength'))
	        textareaLetterCounter()
	      })
	      descrTextarea.addEventListener('input', function(){
	        fileList[fileList.indexOf(fileItem)].description = this.value
	      })
	      $('#gallery_descr_form').on('submit', function (e) {
	        e.preventDefault();
	        $('#galleryDescrModal').modal('hide')
	        onChange()
	      })
	        
	      // Click handler at the exclusion link of the picture
	      remove.addEventListener('click', (e) => {
	        e.preventDefault();
	        // Exclude an element with a picture from the unloading list
	        fileList.splice(fileList.indexOf(fileItem), 1);
	        // Remove the list element(<div>) from <.imgs-previews>
	        itemWrap.classList.add('removing');
	        setTimeout(function () { itemWrap.remove() }, 100);
	        setTimeout(function(){ onChange() }, 100)
	      });
	      itemWrap.appendChild(remove);
	      itemWrap.appendChild(editImg);
	      item.appendChild(image);
	      itemWrap.appendChild(item);
	        
	      preview.appendChild(itemWrap);
	    });
	    // Launch a file reading
	    reader.readAsBinaryString(file);
	  });
	  // We drop the meaning <input>
	  inputGalleryImg.value = '';
	  // Create a clone <input>
	  const newInput = inputGalleryImg.cloneNode(true);
	  // Replaceable <input> clone
	  inputGalleryImg.replaceWith(newInput);
	  // Now Input will indicate the clone
	  inputGalleryImg = newInput;
	  // we’ll hang the onchange function for the change event in the new <nput>
	  inputGalleryImg.addEventListener('change', onChange);
	  return;
	}
	
	
	
	// gallery video form
	$('#btn_add_gallery_video').on('click', function () {
	  $('#galleryVideoModal').modal('show')
	})
	
	$('.btn-del-select-video').on('click', function () {
	  // e.preventDefault();
	  this.parentElement.remove()
	});
	
	$('#gallery_video_form').on('submit', function (e) {
	  e.preventDefault()
	  const thisInput = this.input_gallery_video
	
	  if (thisInput.value.length) {
	    thisInput.classList.remove('error')
	
	    let div = document.createElement('div')
	        div.classList.add('iframe-wrap')
	    const editVideo = document.createElement('button');
	          editVideo.type = "button";
	          editVideo.classList.add('btn-load-select-video', 'btn-edit')
	    editVideo.innerHTML = '<svg width = "30" height = "30" viewBox = "0 0 30 30" fill = "none" xmlns = "http://www.w3.org/2000/svg" ><circle cx="15" cy="15" r="15" fill="currentColor"></circle><path class="pen" d="M21.4873 10.987L20.1844 12.2899L17.6714 9.85386L19.0128 8.51249C19.3409 8.18435 19.7859 8 20.25 8C20.7141 8 21.1591 8.18435 21.4873 8.51249C21.8154 8.84062 21.9997 9.28568 21.9997 9.74974C21.9997 10.2138 21.8154 10.6588 21.4873 10.987ZM19.4214 13.052L11.4108 21.0626L8 22.0129L8.93538 18.589L16.9163 10.6081L19.4214 13.052Z"></path></svg>';
	    const remove = document.createElement('button');
	          remove.type = "button";
	          remove.classList.add('btn-del-select-video', 'btn-delete')
	          remove.innerHTML = '<svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="15" cy="15" r="15"></circle><path d="M17.4998 7.5C17.7209 7.5 17.9328 7.5878 18.0891 7.74408C18.2454 7.90036 18.3332 8.11232 18.3332 8.33333H19.9998C20.2209 8.33333 20.4328 8.42113 20.5891 8.57741C20.7454 8.73369 20.8332 8.94565 20.8332 9.16667C20.8332 9.38768 20.7454 9.59964 20.5891 9.75592C20.4328 9.9122 20.2209 10 19.9998 10H9.99984C9.77882 10 9.56686 9.9122 9.41058 9.75592C9.2543 9.59964 9.1665 9.38768 9.1665 9.16667C9.1665 8.94565 9.2543 8.73369 9.41058 8.57741C9.56686 8.42113 9.77882 8.33333 9.99984 8.33333H11.6665C11.6665 8.11232 11.7543 7.90036 11.9106 7.74408C12.0669 7.5878 12.2788 7.5 12.4998 7.5H17.4998Z" fill="currentColor"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M10 10.8334H20V20.8334C20 21.2754 19.8244 21.6993 19.5118 22.0119C19.1993 22.3244 18.7754 22.5 18.3333 22.5H11.6667C11.2246 22.5 10.8007 22.3244 10.4882 22.0119C10.1756 21.6993 10 21.2754 10 20.8334V10.8334ZM12.9167 12.5C12.8062 12.5 12.7002 12.5439 12.622 12.6221C12.5439 12.7002 12.5 12.8062 12.5 12.9167V20.4167C12.5 20.5272 12.5439 20.6332 12.622 20.7113C12.7002 20.7895 12.8062 20.8334 12.9167 20.8334C13.0272 20.8334 13.1332 20.7895 13.2113 20.7113C13.2894 20.6332 13.3333 20.5272 13.3333 20.4167V12.9167C13.3333 12.8062 13.2894 12.7002 13.2113 12.6221C13.1332 12.5439 13.0272 12.5 12.9167 12.5ZM17.0833 12.5C16.9728 12.5 16.8668 12.5439 16.7887 12.6221C16.7106 12.7002 16.6667 12.8062 16.6667 12.9167V20.4167C16.6667 20.5272 16.7106 20.6332 16.7887 20.7113C16.8668 20.7895 16.9728 20.8334 17.0833 20.8334C17.1938 20.8334 17.2998 20.7895 17.378 20.7113C17.4561 20.6332 17.5 20.5272 17.5 20.4167V12.9167C17.5 12.8062 17.4561 12.7002 17.378 12.6221C17.2998 12.5439 17.1938 12.5 17.0833 12.5Z" fill="currentColor"></path></svg>';
	      div.appendChild(remove);
	      div.appendChild(editVideo);
	      div.insertAdjacentHTML('beforeend', '<iframe width="216" height="216" src="https://www.youtube.com/embed/' + this.input_gallery_video.value.split("/").pop() + '" title="video" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>');
	
	    $('.videos-wrap')[0].appendChild(div);
	    this.input_gallery_video.value = ''
	    $('#galleryVideoModal').modal('hide')
	
	    $('.btn-del-select-video').on('click', function () {
	      this.parentElement.remove()
	    });
	
	    $('.btn-load-select-video').on('click', function () {
	      let iframeWrap = $(this).closest('.iframe-wrap');
	          iframeWrap.addClass('current');
	
	      $('#galleryEditVideoModal').modal('show')
	      $('#galleryEditVideoModal').find('#input_edit_gallery_video')[0].value = $('.iframe-wrap.current iframe')[0].src
	
	      $('#gallery_edit_video_form').on('submit', function (e) {
	        e.preventDefault()
	        const thisInput = this.input_edit_gallery_video
	
	        if (thisInput.value.length) {
	          $('.iframe-wrap.current iframe')[0].src = '';
	          $('.iframe-wrap.current iframe')[0].src = 'https://www.youtube.com/embed/' + this.input_edit_gallery_video.value.split("/").pop();
	          setTimeout(() => {
	            thisInput.value = ''
	            $('#galleryEditVideoModal').modal('hide')
	          }, 100);
	          thisInput.classList.remove('error')
	        } else {
	          thisInput.classList.add('error')
	        }
	      })
	    });
	
	    $('#galleryEditVideoModal').on('show.bs.modal', function () {
	      setTimeout(() => {
	        $('#input_edit_gallery_video').trigger('focus')
	      }, 100);
	    })
	    $('#galleryEditVideoModal').on('hide.bs.modal', function () {
	      $('.iframe-wrap.current').removeClass('current')
	    })
	  } else {
	    thisInput.classList.add('error')
	  }
	})

	/****************************************
	  1 - Filling in the data of the memorial.
	*******************************************/
	
	let memorialImgPath = $('#form_create_memorial .select-img img').length ? $('#form_create_memorial .select-img img')[0].src : '';
	
	// input file
	$('#load_memorial_img').on('change', function () {
	  if (this.files && this.files[0]) {
	    let readerImg = new FileReader();
	    readerImg.onload = function (e) {
	      memorialImgPath = e.target.result;
	      $('#main_img img')[0].src = memorialImgPath
	    }
	    readerImg.readAsDataURL(this.files[0]);
	    // activate the save button
	    // isChangeForm()
	  }
	})
	
	$('#del_memorial_img').on('click', function (e) {
	  // letiable for recording the old value
	  memorialImgPath = this.dataset.resetImg;
	  // assign the default image
	  $('#main_img img')[0].src = memorialImgPath;
	  // reset the input
	  $('#load_memorial_img')[0].value = ''
	  $('#load_memorial_img')[0].setAttribute('value', '')
	})
	
	//  - - - - custom template - - - - //
	function customTemplate() {
	  $('[name="templates"]').each(function () {
	    this.checked = false
	  })
	  $('[name="templates"]:not(#donl_templ)').on('click', function () {
	    $('#donl_templ_img')[0].src = 'static/img/fake-img.png';
	  })
	  $('#donl_templ').on('click', function () {
	    customTemplate()
	  })
	}
	// input download template bg
	fileImgLoad($('#donl_templ'), $('#donl_templ_img'), customTemplate)
	//  - - - - /custom template - - - - //
	
	//  - - - - /datapicker settings - - - - //
	
	//  - - - - monument foto - - - - //
	fileImgLoad($('#monument_foto'), $('#monument_foto_img'))
	
	$('#del_monument_foto').on('click', function (e) {
	  // assign the default image
	  $('#monument_foto_img')[0].src = this.dataset.resetImg;
	  // letiable for recording the old value
	  memorialImgPath = this.dataset.resetImg;
	  // reset the input
	  $('#monument_foto')[0].value = ''
	  $('#monument_foto')[0].setAttribute('value', '')
	  // activate the save button
	  // isChangeForm()
	})
	
	//  - - - - /monument foto - - - - //
	
	const
	  memorialLastlName = $('#memorial_last_name'),
	  memorialName = $('#memorial_name'),
	  memorialSurname = $('#memorial_surname'),
	  memorialBirthDay = $('#birth_day'),
	  memorialDeath_day = $('#death_day'),
	  memorialCountry = $('#memorial_country'),
	  memorialCity = $('#memorial_city')
	  ;
	
	$('#form_create_memorial').on('submit', function (e) {
	  e.preventDefault()
	
	  // validation inputs
	  if (memorialLastlName[0].value == '') {
	    memorialLastlName.addClass('error')
	    $('#' + memorialLastlName[0].id + ' ~ .error-mess')[0].textContent = 'Додайте інформацію'
	  }
	  if (memorialLastlName[0].value.length === 1) {
	    memorialLastlName.addClass('error')
	    $('#' + memorialLastlName[0].id + ' ~ .error-mess')[0].textContent = ' Не меньше двох символiв'
	  }
	  if (memorialName[0].value == '') {
	    memorialName.addClass('error')
	    $('#' + memorialName[0].id + ' ~ .error-mess')[0].textContent = "Додайте інформацію"
	  }
	  if (memorialName[0].value.length === 1) {
	    memorialName.addClass('error')
	    $('#' + memorialName[0].id + ' ~ .error-mess')[0].textContent = 'Не меньше двох символiв'
	  }
	  if (memorialSurname[0].value == '') {
	    memorialSurname.addClass('error')
	    $('#' + memorialSurname[0].id + ' ~ .error-mess')[0].textContent = 'Додайте інформацію'
	  }
	  if (memorialSurname[0].value.length === 1) {
	    memorialSurname.addClass('error')
	    $('#' + memorialSurname[0].id + ' ~ .error-mess')[0].textContent = 'Не меньше двох символiв'
	  }
	  if (memorialBirthDay[0].value == '') {
	    memorialBirthDay.addClass('error')
	  }
	  if (memorialDeath_day[0].value == '') {
	    memorialDeath_day.addClass('error')
	  }
	  if (memorialCountry[0].value == '') {
	    memorialCountry.addClass('error')
	  }
	  if (memorialCity[0].value == '') {
	    memorialCity.addClass('error')
	  }
	  
	  if ($('#form_create_memorial .error').length) {
	    $('html, body').animate({ scrollTop: $('#form_create_memorial .error').offset().top - $('#header').outerHeight() - 20 }, 300)
	     return false; 
	  }
	
	  $('#event_birth_day')[0].value = memorialBirthDay[0].value;
	  $('#event_death_day')[0].value = memorialBirthDay[0].value;
	
	  let formData = new FormData(e.target);
	  let jsonData = {};
	
	  formData.forEach(function (value, key) { jsonData[key] = value; });
	  jsonData = JSON.stringify(jsonData);
	
	  console.log(jsonData);
	
	  $.ajax({
	    url: "/",
	    type: "POST",
	    data: jsonData,
	    success: function (jsonData) {
	      // code
	      $('#headCrMem_2').removeAttr('style')
	    },
	    error: function (error) {
	      // code
	    }
	  });
	
	
	})
	/* ******************************************
	  3 - User Cabinet Management Create Events
	******************************************* */
	
	if ($('#memorable_events_form').length) {
	
	  const memorableEventsForm = $('#memorable_events_form'),
	        memorableEventName = memorableEventsForm[0].memorable_event_name,
	        memorableEventDecr = memorableEventsForm[0].memorable_event_decr,
	        memorableEventDateDay = memorableEventsForm[0].memorable_event_date_day,
	        memorableCrreateEventImgPreview = memorableEventsForm[0].memorable_crreate_event_img_preview,
	        btnDelMemorableCrreateEventImgPreview = memorableEventsForm[0].btn_del_memorable_crreate_event_img_preview;
	  
	  memorableEventsForm.on('submit', function (e) {
	    e.preventDefault();
	  
	    let formData = new FormData(e.target);
	    let jsonData = {};
	    
	    formData.forEach(function (value, key) { jsonData[key] = value; });
	    jsonData = JSON.stringify(jsonData);
	    
	    $.ajax({
	      url: "/",
	      type: "POST",
	      data: jsonData,
	      success: function (jsonData) {
	        // code
	        $('#donateModal').modal('show')
	      },
	      error: function (error) {
	        // code
	      }
	    });
	    
	  });
	  
	  
	  fileImgLoad($('#memorable_crreate_event_img'), $('#memorable_crreate_event_img_preview'), eventImgPreview)
	  // delete image
	  $('#btn_del_memorable_crreate_event_img_preview').on('click', function () {
	    $('#memorable_crreate_event_img_preview')[0].setAttribute('src', 'static/img/fake-img.png')
	    $('[for=memorable_crreate_event_img] span')[0].textContent = 'Завантажити фото'
	    this.hidden = true
	  })
	  // 
	  function eventImgPreview() {
	    $('[for=memorable_crreate_event_img] span')[0].textContent = 'Завантажити iнше фото';
	    $('#btn_del_memorable_crreate_event_img_preview')[0].hidden = false;
	  }
	  
	  $('#btn_memorable_events').on('click', function () {
	  
	    let el = $('#event_template')[0].cloneNode(true),
	      
	      attrs = ['id', 'hidden'],
	      eventId = 'event_' + Date.now();
	    // remove attr
	    attrs.forEach(attr => el.removeAttribute(attr))
	    
	    el.id = eventId;
	
	    for (let i = 0; i < el.querySelectorAll('[data-event-block]').length; i++) {
	      el.querySelectorAll('[data-event-block]')[i].dataset.eventBlock = eventId
	    }
	
	    function elControlsListener(e, ev, func) {
	      el.querySelector(e).addEventListener([ev], function () { func(this.dataset.eventBlock) });
	    }
	    elControlsListener('.btn-edit-event', 'click', editEvent)
	    elControlsListener('.btn-save-edits', 'click', saveEdit)
	    elControlsListener('.btn-remove-event', 'click', removeEvent)
	    elControlsListener('.btn-remove-event-img', 'click', removeEventImg)
	
	    // function imgElControlsListener(e, img, func) {
	    //   func(el.querySelector(e), el.querySelector(img));
	    // }
	    // imgElControlsListener('[type=file]', 'img.memorable-event-img', changeImg)
	
	
	    
	  function qEl(e, m, l) {
	    el.querySelector(e)[m] = l;
	  }
	    
	  qEl('img', 'src', memorableCrreateEventImgPreview.src)
	  
	  
	  // VALIDATION INPUTS
	  // $(memorialLastlName).addClass('error')
	  if (memorableEventName.value === '') {
	    memorableEventName.classList.add('error')
	  }
	  // if (memorableEventDecr.value === '') {
	  //   memorableEventDecr.classList.add('error')
	  // }
	  if (memorableEventDateDay.value === '') {
	    memorableEventDateDay.classList.add('error')
	  }
	    
	  // stop code if error
	  if ($('#memorable_events_form .error').length) { return false; }
	  
	  qEl('.event-title', 'value',  memorableEventName.value)
	  qEl('.event-descr', 'value', memorableEventDecr.value)
	  qEl('.event-date', 'value', memorableEventDateDay.value)
	    
	  memorableEventName.value = '';
	  // $(memorableEventName).next('.textarea-maxlength').text('0' + '/' + $(memorableEventName)[0].getAttribute('maxlength'))
	  memorableEventDecr.value = '';
	  // $(memorableEventDecr).next('.textarea-maxlength').text('0' + '/' + $(memorableEventDecr)[0].getAttribute('maxlength'))
	  setTimeout(() => { textareaLetterCounter() }, 100);
	  memorableEventDateDay.value = '';
	  memorableCrreateEventImgPreview.src = 'static/img/fake-img.png'
	  btnDelMemorableCrreateEventImgPreview.hidden = true;
	  $('[for=memorable_crreate_event_img] span')[0].textContent = 'Завантажити фото';
	  
	    $('#events_wrap').append(el)
	
	    function changeImg(inp, img, btnDel, btnNewImgLabel) {
	      inp.addEventListener('change', function () {
	        if (this.files && this.files[0]) {
	          let readerImg = new FileReader();
	          readerImg.onload = function (e) {
	            memorialImgPath = e.target.result;
	            img.src = memorialImgPath
	            btnDel.hidden = false;
	            btnNewImgLabel.textContent = 'Змiнити фото'
	          }
	          readerImg.readAsDataURL(this.files[0]);
	        }
	      })
	    }
	
	    changeImg(
	      el.querySelector('[type=file]'),
	      el.querySelector('img.memorable-event-img'),
	      el.querySelector('.btn-remove-event-img'),
	      el.querySelector('.select-new-img span'),
	    );
	
	    // for change date
	    setTimeout(() => { pmuInit(el.querySelector('.event-date')) }, 100);
	
	    // eliminate manual input date
	    el.querySelector('.event-date').onfocus = function () {
	      this.blur()
	    }
	    // Delete Eror Class for Focus
	    el.querySelector('input').onfocus = function () {
	      this.classList.remove('error')
	    }
	    el.querySelector('textarea').onfocus = function () {
	      this.classList.remove('error')
	    }
	  
	    });
	
	  // del
	  // $('.btn-edit-event').on('click', function () {
	  //   editEvent(this.dataset.eventBlock)
	  // });
	  
	  function editEvent(e) {
	
	    let eventBlock = $('#'+e)
	    let inputsReadonly = eventBlock[0].querySelectorAll('[data-readonly]')
	    let selectNewImg = eventBlock[0].querySelector('.select-new-img')
	    let saveEditBtn = eventBlock[0].querySelector('.btn-save-edits')
	    let img = eventBlock[0].querySelector('img.memorable-event-img')
	    let btnNewImgLabel = eventBlock[0].querySelector('.select-new-img span')
	    let btnDelImg = eventBlock[0].querySelector('.btn-delete')
	    let labels = eventBlock[0].querySelectorAll('label[data-lab-hide]')
	
	    for (let i = 0; i < labels.length; i++) {
	      labels[i].hidden = false;
	    }
	    for (let i = 0; i < inputsReadonly.length; i++) {
	      inputsReadonly[i].removeAttribute('readonly')
	    }
	    selectNewImg.hidden = false;
	    if (!img.src.includes('fake-img')) {
	      btnDelImg.hidden = false;
	      btnNewImgLabel.textContent = 'Змiнити фото'
	    } else {
	      btnNewImgLabel.textContent = 'Додати фото'
	    }
	    saveEditBtn.hidden = false;
	  }
	
	  // del
	  // $('.btn-save-edits').on('click', function () {
	  //   saveEdit(this.dataset.eventBlock)
	  // })
	
	  function saveEdit(e) {
	    let eventBlock = $('#'+e)
	    let saveEditBtn = eventBlock[0].querySelector('.btn-save-edits')
	    let inputsReadonly = eventBlock[0].querySelectorAll('[data-readonly]')
	    let memorableEventNameIn = eventBlock[0].querySelector('.event-title')
	    let memorableEventDecrIn = eventBlock[0].querySelector('.event-descr')
	    let selectNewImg = eventBlock[0].querySelector('.select-new-img')
	    let btnDelImg = eventBlock[0].querySelector('.btn-delete')
	    let labels = eventBlock[0].querySelectorAll('label[data-lab-hide]')
	    // let eventTitle = eventBlock[0].querySelector('.event-title')
	    // eventTitle.style.height = eventTitle.scrollHeight + "px"
	
	    for (let i = 0; i < labels.length; i++) {
	      labels[i].hidden = true;
	    }
	
	    // VALIDATION INPUTS (inside the event of the event)
	    if (memorableEventNameIn.value === '') {
	      memorableEventNameIn.classList.add('error')
	    }
	    // if (memorableEventDecrIn.value === '') {
	    //   memorableEventDecrIn.classList.add('error')
	    // }
	    
	    // stop code if error
	    console.log(eventBlock[0].querySelector('.error') !== null);
	    if (eventBlock[0].querySelector('.error') !== null) { return false; }
	    
	    for (let i = 0; i < inputsReadonly.length; i++) {
	      inputsReadonly[i].setAttribute('readonly','')
	    }
	  
	    selectNewImg.hidden = true;
	    btnDelImg.hidden = true;
	    saveEditBtn.hidden = true;
	  }
	  
	  // del
	  // $('.btn-remove-event').on('click', function () {
	  //   removeEvent(this.dataset.eventBlock)
	  // })
	
	  function removeEventImg(e) {
	    // let btnNewImgLabel = eventBlock[0].querySelector('.select-new-img span')
	    // btnNewImgLabel.textContent = 'Змiнити фото'
	    $('.select-new-img[data-event-block=' + e + '] span')[0].textContent = 'Додати фото'
	    $('.btn-remove-event-img[data-event-block=' + e + ']')[0].hidden = true;
	    $('img[data-event-block=' + e + ']')[0].setAttribute('src', 'static/img/fake-img.png')
	  }
	
	  function removeEvent(e) {
	    $('#'+e)[0].remove()
	  }
	  
	}


	/*_forms_*/
	// pass show/hide function
	$('.pass-show').on('click', function () {
	  let thisInput = $(this)[0].parentNode.querySelector('input'),
	    thisSlashEye = $(this).find('.eye-slash')[0]
	
	  thisInput.type === 'password'
	    ? (thisInput.type = 'text' && thisSlashEye.setAttribute('hidden', ''))
	    : (thisInput.type = 'password') && thisSlashEye.removeAttribute('hidden')
	  // thisSlashEye.classList.toggle('hidden')
	})
	
	// LOGOUT
	$('#btn_logout').on('click', function (e) {
	  e.preventDefault();
	  location.href = 'login.html';
	  localStorage.login = false;
	})
	// IF LOGIN
	if (localStorage.login === 'true') {
	  $('#page').addClass('IS_LOG_IN')
	  $('a').each(function () {
	    if (this.href.includes('login.html') && !$(this).hasClass('btn-user-login'))
	    // this.href = 'user-cabinet-data.html';
	      this.href = 'user-cabinet-management.html';
	  })
	}
	
	
	// input file
	function fileImgLoad(input, viewImg, callFunc) {
	  let memorialImgPath = '';
	  if (input[0] !== undefined) {
	
	    input[0].addEventListener('change', function () {
	      if (this.files && this.files[0]) {
	
	        let maxW = 1000, maxH = 1000, minW = 150, minH = 150, thisImgW = 0, thisImgH = 0;
	        let readerImg = new FileReader();
	
	        let url = window.URL || window.webkitURL;
	        let img = new Image();
	        img.onload = function () {
	          thisImgW = this.width;
	          thisImgH = this.height;
	        }
	        img.src = url.createObjectURL(this.files[0]);
	
	        if(thisImgW < minW || thisImgH < minH){
	          console.log(1231321);
	          input.addClass('error')
	          // $('#' + input.id + ' ~ .error-mess')[0].textContent = 'Вкажіть email'
	          return false;
	        }else if(thisImgW > maxW || thisImgH > maxH){
	          console.log(1231321);
	          return false;
	        }
	
	        readerImg.onload = function (e) {
	          memorialImgPath = e.target.result;
	          viewImg[0].src = memorialImgPath
	        }
	        readerImg.readAsDataURL(this.files[0]);
	        // activate the save button
	        if (callFunc) { callFunc()}
	      }
	    })
	  }
	}
	
	
	// all input autocomplete off
	$('input:not([type="checkbox"], [type="radio"], [type="submit"])').each(function () { this.setAttribute('autocomplete', 'off') })
	
	// textarea letter counter
	function textareaLetterCounter() {
	  $('textarea[maxlength]').each(function () {
	    if ($(this).next('.textarea-maxlength').length) {
	      $(this).next('.textarea-maxlength').text($(this).val().length + '/' + $(this)[0].getAttribute('maxlength'))
	    }
	  })
	  $('textarea[maxlength]').on('input', function(){
	    $(this).next('.textarea-maxlength').text($(this).val().length + '/' + $(this)[0].getAttribute('maxlength'))
	    // scrol to bottom (need!)
	    $(this).scrollTop($(this)[0].scrollHeight);
	  })
	}
	textareaLetterCounter()
	
	// removeClass error if focus
	$('textarea, input').on('focus', function(){
	  $(this).removeClass('error')
	})
	
	// input that adjusts in height
	$('[contenteditable]').on('keyup', function () {
		const thisDataId = $(this)[0].getAttribute('data-input-id')
		$('#' + thisDataId).val($(this).text())
	  
	  $('#' + thisDataId).val() === ''
			? $(this).removeClass('active')
			: $(this).addClass('active')
	})
	
	// pass icon or curency icon...
	function centeredIconForInput() {
	  setTimeout(function () {
	    $('.icon-for-input').each(function () {
	      $(this).css('top', $(this).next()[0].offsetHeight / 2)
	    })
	  }, 100);
	}
	// centeredIconForInput()
	
	$('.auto-h').on('keyup', function () {
	  // auto height
	  this.style.height = "1px";
	  this.style.height = this.scrollHeight + "px"
	});
	$('#complain_form').on('submit', function (e){
	  e.preventDefault()
	  $('#sucsesModalLabel').text('Дякуємо, Ваше повідомлення надіслано')
	  setTimeout(function(){
	    $('#complainModal').modal('hide')
	    $('#sucsesModal').modal('show')
	    setTimeout(function(){
	      $('#sucsesModal').modal('hide')
	    }, 5000);
	  }, 1000);
	})
	$('#send_message_form').on('submit', function (e){
	  e.preventDefault()
	  $('#sucsesModalLabel').text('Повідомлення відправлено')
	  setTimeout(function(){
	    $('#sendMessageModal').modal('hide')
	    $('#sucsesModal').modal('show')
	    setTimeout(function(){
	      $('#sucsesModal').modal('hide')
	    }, 5000);
	  }, 1000);
	})
	$('#comments_form').on('submit', function (e){
	  e.preventDefault()
	})
	
	$('#comment_add_foto').on('change', function(e){
	  if (this.files && this.files[0]) {
	    let readerImg = new FileReader();
	      readerImg.onload = function (e) {
	        $('.label-add-foto')[0].classList.add('active')
	        $('.label-add-foto')[0].style.backgroundImage = 'url('+e.target.result+')';
	      }
	      // readerImg.readAsDataURL(e.target.files[0]); // ?
	      readerImg.readAsDataURL(this.files[0]);
	  }
	})
	$('.label-add-foto.active').on('click', function(e){e.preventDefault()})
	
	$('.btn-remove-img').on('click', function(e){
	  e.preventDefault()
	  const thisParent = $(this)[0].parentElement.parentElement,
	  thisParentFor = thisParent.getAttribute('for')
	  
	  $('#'+thisParentFor).val('')
	  thisParent.classList.remove('active')
	  $('.label-add-foto')[0].style.backgroundImage = 'none';
	});
	
	$('.form-to-comments').on('submit', function (e) {
		e.preventDefault()
	})
	
	$('label[for]').on('click', function () {
		const forElem = $('[data-input-id="' + this.getAttribute('for') + '"]')
		if (forElem.length != 0) forElem.focus()
	})
	$('#contact_us_form').on('submit', function (e) {
	  e.preventDefault()
	
	  let valid, inputId
	
	  $(this).find('input, option, textarea').not('[type=submit]').each(function () {
	
	    inputId = $(this).attr('id')
	
	    let emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
	
	    // Name
	    if (inputId === 'name') {
	      if ($(this).val() !== '') {
	        $(this).removeClass('error')
	      } else {
	        $(this).addClass('error')
	      }
	    }
	
	    // Email
	    if (inputId === 'email') {
	
	      if ($(this).val() == '') {
	        $(this).addClass('error')
	        $('#' + inputId + ' ~ .error-mess')[0].textContent = 'Вкажіть email'
	      }else if (!$(this).val().includes('@')) {
	        $(this).addClass('error')
	        $('#' + inputId + ' ~ .error-mess')[0].textContent = 'Пропущено "@"'
	      }else if (/[а-яА-ЯЪъЫыЭэЁё]/i.test($(this).val())) {
	        $(this).addClass('error')
	        $('#' + inputId + ' ~ .error-mess')[0].textContent = 'Не можна писати кирилицею'
	      }else if ($(this).val().length > 320) {
	        $(this).addClass('error')
	        $('#' + inputId + ' ~ .error-mess')[0].textContent = 'Не можна бiльше 320 символiв'
	      }else if (!emailReg.test($(this).val()) || $(this).val() == '') {
	        $(this).addClass('error')
	        $('#' + inputId + ' ~ .error-mess')[0].textContent = 'Перевірте E-mail'
	      } else {
	        $(this).removeClass('error')
	      }
	
	    }
	
	    // // Message subject
	    if (inputId === 'message_subject') {
	      if ($(this).val() === 'none' || $(this).val() === '') {
	        // this.parentElement.classList.add('error')
	        let defaultMessage_subject = $('#contact_us_form .site-dropdown-select li')[0].textContent;
	        $('#contact_us_form .select-sort')[0].textContent = defaultMessage_subject;
	        $(this).val(defaultMessage_subject);
	      } else {
	        // this.parentElement.classList.remove('error')
	      }
	    }
	
	    // Text
	    if (inputId === 'text') {
	      if ($(this).val() == '') {
	        $(this).addClass('error')
	      } else {
	        $(this).removeClass('error')
	      }
	    }
	
	  })
	
	  // check error
	  if ($('#contact_us_form .error').length) {
	    $('html, body').animate({ scrollTop: $('#contact_us_form .error').offset().top - $('#header').outerHeight() - 20 }, 300)
	     return false; 
	  }
	
	  let formData = new FormData(e.target);
	  let jsonData = {};
	  
	  formData.forEach(function (value, key) { jsonData[key] = value; });
	  jsonData = JSON.stringify(jsonData);
	
	  $.ajax({
	    url: "/",
	    type: "POST",
	    data: jsonData,
	    success: function (jsonData) {
	      // code
	
	      $('#sucsesModalLabel').text("Ваше повідомлення успішно надіслано. Ми спробуємо зв'язатися з Вами якнайшвидше!")
	      setTimeout(function () {
	        $('#contact_us_form').find('input, option, textarea').not('[type=submit]').each(function () {
	          $(this).val('').text('')
	        })
	        $('[data-dropdown-id="message_subject"]').removeClass('in-active')
	        $('[data-dropdown-id="message_subject"] .select-sort').text('Оберіть певну тему')
	  
	        $('#sendMessageModal').modal('hide')
	        $('#sucsesModal').modal('show')
	        setTimeout(function () {
	          $('#sucsesModal').modal('hide')
	        }, 5000);
	      }, 1000);
	      
	    },
	    error: function (error) {
	      // code
	    }
	  });
	})
	if ($('.donate').length !== 0) {
	  // period donate
	  const payWarn = $('.pay-period-warn')[0],
	    emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/,
	    validFilds = {
	      pay_amount: false,
	      email: false,
	      card_num: false,
	      card_date: false,
	      card_cvc: false
	    };
	  let payAmount = 0;
	    
	  function isAllValidFilds() {
	    return Object.keys(validFilds).filter(function (k) { return !validFilds[k] }).length
	  }
	
	  function typePeriod(e) {
	    if (e === true) {
	      $('.type-period').each(function () { this.removeAttribute('hidden') })
	      if ($('[type="radio"][name="sum"]:not(#pay_enother):checked').length === 0) {
	        $('[for="pay_1"]').trigger('click')
	      }
	    }
	    if (e === false) {
	      $('.type-period').each(function () { this.setAttribute('hidden', '') })
	        $('[for="pay_enother"]').trigger('click')
	    }
	  }
	  typePeriod($('#pay_monthly')[0].checked)
	  $('#pay_monthly')[0].checked
	    ? payWarn.removeAttribute('hidden')
	    : payWarn.setAttribute('hidden', '');
	  
	  $('#pay_monthly, #pay_once').on('change', function () {
	    $('#pay_monthly')[0].checked ? payWarn.removeAttribute('hidden') : payWarn.setAttribute('hidden', '');
	    typePeriod($('#pay_monthly')[0].checked)
	  })
	  // pay curency
	  function typeCurency(abbr, symb) {
	    $('.type-curency').each(function () {
	      this.innerText = abbr
	    })
	    $('.input-curency')[0].innerText = symb
	  }
	  $('[name=currency]').on('change', function () {
	    currencyChange(this.id)
	  })
	  function currencyChange(id) {
	    switch (id) {
	      case 'pay_usd':
	        typeCurency('USD', '$')
	        break;
	      case 'pay_eur':
	        typeCurency('EUR', '€')
	        break;
	      case 'pay_uah':
	        typeCurency('грн', '₴')
	        break;
	    }
	  }
	  
	  function donSubmDisEnab(e) {
	    e
	      ? $('#donate_submit')[0].removeAttribute("disabled")
	      : $('#donate_submit')[0].setAttribute("disabled","");
	  }
	
	  // pay 100 / 200... input
	  $('[type="radio"][name="sum"]:not(#pay_enother)').on('change', function () {
	    payAmount = this.value
	  })
	  // pay enother input
	  $('#pay_enother').on('change', function () {
	    payAmount = $('#payEnother')[0].value
	  })
	  $('#payEnother').on('input', function () {
	    // only numbers
	    let thisValue = this.value.replace(/[^0-9]/g, '');
	    thisValue = thisValue.startsWith('0') ? thisValue.slice(1) : thisValue;
	    this.value = thisValue;
	    payAmount = thisValue;
	    // validation
	    payEnotherValid.call(this)
	  })
	  function payEnotherValid(){
	    if ($('#pay_enother')[0].checked) {
	      if ($(this).val() == '') {
	        $(this).addClass('error');
	        validFilds.pay_amount = false;
	        $('#formCard')[0].hidden = true;
	        $('#donate_submit')[0].removeAttribute("disabled");
	      } else {
	        $(this).removeClass('error')
	        validFilds.pay_amount = true;
	        if(validFilds.email === false) $('#formCard')[0].hidden = true;
	      }
	    } else {
	      validFilds.pay_amount = true
	    }
	  }
	
	  function emailValid() {
	
	    if ($(this).val() == '') {
	      $(this).addClass('error')
	      $('#' + this.id + ' ~ .error-mess')[0].textContent = 'Вкажіть email'
	      validFilds.email = false
	    }else if (!$(this).val().includes('@')) {
	      $(this).addClass('error')
	      $('#' + this.id + ' ~ .error-mess')[0].textContent = 'Пропущено "@"'
	      validFilds.email = false
	    }else if (/[а-яА-ЯЪъЫыЭэЁё]/i.test($(this).val())) {
	      $(this).addClass('error')
	      $('#' + this.id + ' ~ .error-mess')[0].textContent = 'Не можна писати кирилицею'
	      validFilds.email = false
	    }else if ($(this).val().length > 320) {
	      $(this).addClass('error')
	      $('#' + this.id + ' ~ .error-mess')[0].textContent = 'Не можна бiльше 320 символiв'
	      validFilds.email = false
	    }else if (!emailReg.test($(this).val())) {
	      $(this).addClass('error')
	      $('#' + this.id + ' ~ .error-mess')[0].textContent = 'Перевірте E-mail'
	      validFilds.email = false
	    } else {
	      $(this).removeClass('error')
	      validFilds.email = true
	    }
	
	    // if (!emailReg.test($(this).val()) || $(this).val() == '') {
	    //   $(this).addClass('error')
	    //   validFilds.email = false
	    // } else {
	    //   $(this).removeClass('error')
	    //   validFilds.email = true
	    // }
	  }
	  // email
	  $('#email').on('focus', function () {
	
	    $(this).on('input', function () { 
	      if (!emailReg.test($(this).val()) || $(this).val() == '') {
	        validFilds.email = false
	        $('#formCard')[0].hidden = true;
	        $('#donate_submit')[0].removeAttribute("disabled")
	      } else {
	        validFilds.email = true
	        if (validFilds.pay_amount === false) $('#formCard')[0].hidden = true;
	      }
	    })
	  })
	
	  // card_num
	  $('#card_num').on('focus', function () {
	    // Input Phone Only Numbers + Formatting
	    $(this).on('input', function () {
	      let cardCode = this.value.replace(/[^0-9\d]/g, '').substring(0, 16);
	      cardCode = cardCode != '' ? cardCode.match(/.{1,4}/g).join(' ') : '';
	      this.value = cardCode;
	
	      if ($(this).val() == '' || $(this).val().length !== 19) {
	        validFilds.card_num = false
	      } else {
	        validFilds.card_num = true
	      }
	      isAllValidFilds() === 0 ? donSubmDisEnab(1) : donSubmDisEnab(0);
	    })
	    // valid
	    $(this).on('blur', function () {
	      if ($(this).val() == '' || $(this).val().length !== 19) {
	        $(this).addClass('error')
	        validFilds.card_num = false
	      } else {
	        $(this).removeClass('error')
	        validFilds.card_num = true
	      }
	    })
	  })
	  // Formatting card_date
	  function formatCardDate(e) {
	    var code = e.keyCode;
	    var allowedKeys = [8];
	    if (allowedKeys.indexOf(code) !== -1) { return; }
	
	    e.target.value = e.target.value.replace(
	      /^([1-9]\/|[2-9])$/g, '0$1/' // 3 > 03/
	    ).replace(
	      /^(0[1-9]|1[0-2])$/g, '$1/' // 11 > 11/
	    ).replace(
	      /^([0-1])([3-9])$/g, '0$1/$2' // 13 > 01/3
	    ).replace(
	      /^(0?[1-9]|1[0-2])([0-9]{2})$/g, '$1/$2' // 141 > 01/41
	    ).replace(
	      /^([0]+)\/|[0]+$/g, '0' // 0/ > 0 and 00 > 0
	    ).replace(
	      /[^\d\/]|^[\/]*$/g, '' // To allow only digits and `/`
	    ).replace(
	      /\/\//g, '/' // Prevent entering more than 1 `/`
	    );
	    // this.value = e.target.value;
	  }
	  // card_date
	  $('#card_date').on('focus', function () {
	    // Input Phone Only Numbers + Formatting
	    $(this).on('keyup', function(e){
	      // Formatting date
	      formatCardDate(e)
	    })
	    $(this).on('keydown', function(e){
	      // Formatting date
	      formatCardDate(e)
	    })
	    
	    $(this).on('input', function (e) {
	      let cardDate = this.value.replace(/[^0-9]/g, '')//.substring(0, 4);
	      cardDate = cardDate != '' ? cardDate.match(/.{1,2}/g).join('/') : '';
	      this.value = cardDate;
	
	      if ($(this).val() == '' || $(this).val().length !== 5) {
	        validFilds.card_date = false
	      } else {
	        validFilds.card_date = true
	      }
	      isAllValidFilds() === 0 ? donSubmDisEnab(1) : donSubmDisEnab(0);
	    })
	    // valid
	    $(this).on('blur', function () {
	      if ($(this).val() == '' || $(this).val().length !== 5) {
	        $(this).addClass('error')
	        validFilds.card_date = false
	      } else {
	        $(this).removeClass('error')
	        validFilds.card_date = true
	      }
	    })
	  })
	  // card_cvc
	  $('#card_cvc').on('focus', function () {
	    // Input Phone Only Numbers
	    $(this).on('input', function () {
	      this.value = this.value.replace(/[^0-9]/g, '');
	
	      if ($(this).val() == '' || $(this).val().length !== 3) {
	        validFilds.card_cvc = false
	      } else {
	        validFilds.card_cvc = true
	      }
	      isAllValidFilds() === 0 ? donSubmDisEnab(1) : donSubmDisEnab(0);
	    })
	    $(this).on('blur', function () {
	      if ($(this).val() == '' || $(this).val().length !== 3) {
	        $(this).addClass('error')
	        validFilds.card_cvc = false
	      } else {
	        $(this).removeClass('error')
	        validFilds.card_cvc = true
	      }
	    })
	  })
	
	  // SUBMIT
	  $('#donateForm').on('submit', function(e){
	    e.preventDefault();
	    const thisForm = this;
	    
	    $(this).find('input').not('[type=submit]').each(function () {
	
	      let inputId = $(this).attr('id')
	
	      // pay amount sum ( enother / proposed )
	      if (inputId === 'payEnother') {
	        payEnotherValid.call(this)
	      }
	      // email
	      if (inputId === 'email') {
	        emailValid.call(this)
	      }
	    })
	
	    // show formCard
	    if (validFilds.pay_amount === true && validFilds.email === true){
	      $('#formCard')[0].hidden = false;
	      isAllValidFilds() === 0 ? donSubmDisEnab(1) : donSubmDisEnab(0);
	    }
	    
	    // if all filds valid !
	    if (isAllValidFilds() === 0) {
	      
	      // let dataForm = $('#donateForm').serialize()
	      let dataForm = $(this).serializeArray()
	      
	      $.ajax({
	        url: "/",
	        type: "POST",
	        data: dataForm,
	        success: function (data) {
	          
	          if (!$('.load-block .pay-success')[0].hidden) { $('.load-block .pay-success')[0].hidden = true }
	          $('.load-block')[0].hidden = false
	          $('.load-block .pay-in-process')[0].hidden = false
	          $('#you_paid_amount')[0].innerText = payAmount
	          $('.success-type-curency')[0].innerText = $('.type-curency')[0].textContent
	
	          donSubmDisEnab(0)
	          setTimeout(function() {
	            $('.load-block .pay-in-process')[0].hidden = true
	            $('.load-block .pay-success')[0].hidden = false
	            thisForm.reset()
	            currencyChange($('[name=currency]:checked')[0].id)
	          }, 3000);
	        },
	        error: function (error) {
	          // code
	        }
	      });
	    }
	  })
	}
	$('#del_account_form').on('submit', function (e) {
	  e.preventDefault()
	
	  if (this.message_text.value === '') {
	    this.message_text.classList.add('error')
	  } else {
	    this.message_text.classList.remove('error')
	  }
	  // check error
	  setTimeout(function(){
	    if ($(this).find('.error').length === 0) {
	      $('#delAccModal').modal('hide')
	      $('#delAccAlert').modal('show')
	    }
	  }.bind(this), 100);
	
	})
	
	$('#confirm_remove').on('change', function (e) {
	  this.checked
	    ? this.form.setAttribute('disabled', false)
	    : this.form.setAttribute('disabled', true);
	})
	$('#del_account_form [type="reset"]').on('click',function(){
	  this.form.setAttribute('disabled', true);
	  this.form.reset()
	})
	$('.btn-answer-mess').on('click', function () {
	  if (!$(this).hasClass('answer')) {
	    $('#sendMessageModal_2').modal('show')
	    sendMessageForm_2.call(this)
	  }
	})
	let tbnAnswer = '' ;
	let curMess = '';
	
	function sendMessageForm_2() {
	  tbnAnswer = this;
	  curMess = $(tbnAnswer.dataset.messBlock)[0];
	}
	
	$('#send_message_form_2').on('submit', function (e) {
	  e.preventDefault();
	
	  let text = this.message_text;
	  let btn = $(this).find('[type="submit"]'); //del
	
	  if (text.value === '') {
	    text.classList.add('error')
	    btn.css('margin-top', '10px') //del
	  }
	
	  if ($(this).find('.error').length) { return false; }
	
	  btn.css('pointer-events', 'none')
	
	  $('#sucsesModalLabel').text('Відповідь відправлено')
	  setTimeout(function () {
	
	    $('#sendMessageModal_2').modal('hide')
	
	    curMess.insertAdjacentHTML('afterend', `
	      <div class="message-block">
	        <div class="message-header">
	          <div class="img-wrap">
	            <img width="40" height="40" src="static/img/memorials/no-photo.jpg" alt="">
	          </div>
	          <div class="name h6">Ваша відповідь</div>
	        </div>
	        <div class="message-body">
	          <div class="message-text">
	            <p>${text.value}</p>
	          </div>
	        </div>
	        <div class="date-time">дд.мм.рррр 12:00</div>
	      </div>
	    `);
	
	    text.value = '';
	
	    $('#sucsesModal').modal('show')
	    tbnAnswer.dataset.title = 'Ви відповіли'
	    tbnAnswer.classList.add('answer')
	
	    setTimeout(function () {
	      $('#sucsesModal').modal('hide')
	      btn.css('pointer-events', 'auto')
	    }, 3000);
	  }, 1000);
	})
}